{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"autoware_tools","text":""},{"location":"#autoware_tools","title":"autoware_tools","text":"<p>This is a repository for keeping packages that are not needed at runtime, including packages for benchmarking, debugging, tuning, calibrating, etc.</p>"},{"location":"CONTRIBUTING/","title":"Contributing","text":""},{"location":"CONTRIBUTING/#contributing","title":"Contributing","text":"<p>See https://autowarefoundation.github.io/autoware-documentation/main/contributing/.</p>"},{"location":"DISCLAIMER/","title":"DISCLAIMER","text":"<p>DISCLAIMER</p> <p>\u201cAutoware\u201d will be provided by The Autoware Foundation under the Apache License 2.0. This \u201cDISCLAIMER\u201d will be applied to all users of Autoware (a \u201cUser\u201d or \u201cUsers\u201d) with the Apache License 2.0 and Users shall hereby approve and acknowledge all the contents specified in this disclaimer below and will be deemed to consent to this disclaimer without any objection upon utilizing or downloading Autoware.</p> <p>Disclaimer and Waiver of Warranties</p> <ol> <li> <p>AUTOWARE FOUNDATION MAKES NO REPRESENTATION OR WARRANTY OF ANY KIND,    EXPRESS OR IMPLIED, WITH RESPECT TO PROVIDING AUTOWARE (the \u201cService\u201d)    including but not limited to any representation or warranty (i) of fitness or    suitability for a particular purpose contemplated by the Users, (ii) of the    expected functions, commercial value, accuracy, or usefulness of the Service,    (iii) that the use by the Users of the Service complies with the laws and    regulations applicable to the Users or any internal rules established by    industrial organizations, (iv) that the Service will be free of interruption or    defects, (v) of the non-infringement of any third party's right and (vi) the    accuracy of the content of the Services and the software itself.</p> </li> <li> <p>The Autoware Foundation shall not be liable for any damage incurred by the    User that are attributable to the Autoware Foundation for any reasons    whatsoever. UNDER NO CIRCUMSTANCES SHALL THE AUTOWARE FOUNDATION BE LIABLE FOR    INCIDENTAL, INDIRECT, SPECIAL OR FUTURE DAMAGES OR LOSS OF PROFITS.</p> </li> <li> <p>A User shall be entirely responsible for the content posted by the User and    its use of any content of the Service or the Website. If the User is held    responsible in a civil action such as a claim for damages or even in a criminal    case, the Autoware Foundation and member companies, governments and academic &amp;    non-profit organizations and their directors, officers, employees and agents    (collectively, the \u201cIndemnified Parties\u201d) shall be completely discharged from    any rights or assertions the User may have against the Indemnified Parties, or    from any legal action, litigation or similar procedures.</p> </li> </ol> <p>Indemnity</p> <p>A User shall indemnify and hold the Indemnified Parties harmless from any of their damages, losses, liabilities, costs or expenses (including attorneys' fees or criminal compensation), or any claims or demands made against the Indemnified Parties by any third party, due to or arising out of, or in connection with utilizing Autoware (including the representations and warranties), the violation of applicable Product Liability Law of each country (including criminal case) or violation of any applicable laws by the Users, or the content posted by the User or its use of any content of the Service or the Website.</p>"},{"location":"autoware_dependency_checker/","title":"autoware_dependency_checker","text":""},{"location":"autoware_dependency_checker/#autoware_dependency_checker","title":"autoware_dependency_checker","text":"<p>This package provides a script for checking whether each package's dependencies listed in a package.xml are used or not. Currently, it mainly checks packages that start with <code>autoware_</code>.</p>"},{"location":"autoware_dependency_checker/#dependency-checking","title":"Dependency Checking","text":"<p>The script will try to match the dependencies and the headers by reading the dependencies listed in package.xml and the included headers in the source files.</p> <p>Some dependency in <code>package.xml</code> and the included header might differ. The following table shows the matching between dependency names and headers:</p> from to description autoware_pkg_name autoware/pkg_name Usually this style should be used autoware_*_msgs autoware_*_msgs For messages autoware_other_pkg autoware_other_pkg E.g. autoware_lanelet2_extension"},{"location":"autoware_dependency_checker/#usage","title":"Usage","text":"<pre><code># build\n$ cd to/autoware_tools\n$ colcon build --symlink-install --cmake-args --packages-up-to autoware_dependency_checker\n$ source\n\n# run\n$ cd to/your/autoware\n$ ros2 run autoware_dependency_checker dependency_checker.sh\n\n# run in some package\n$ cd to/some/package\n$ ros2 run autoware_dependency_checker dependency_checker.sh\n</code></pre>"},{"location":"bag2lanelet/","title":"bag2lanelet","text":""},{"location":"bag2lanelet/#bag2lanelet","title":"bag2lanelet","text":"<p>This package generates a lanelet map necessary for Autoware's autonomous driving from rosbag data containing information about Localization (<code>/tf</code>). This enables autonomous driving based on manual driving information.</p> <p>The provided functionalities are as follows:</p> <ul> <li>bag2lanelet.py: Generates lanelet (.osm) from a rosbag based on the position of <code>base_link</code>.</li> <li>bag2trajectory.py: Generates trajectory information (.csv) for vector_map_builder from a rosbag.</li> </ul>"},{"location":"bag2lanelet/#example","title":"Example","text":"<p>As an example, the process of lanelet generation based on driving trajectories from the planning simulator is performed as follows. Typically, the expectation is to use rosbag data from manual driving, rather than from the planning simulator.</p> <p>Firstly, you need to run the planning_simulator following the planning_simulator tutorial in Autoware Documentation. The process would be, install Autoware, download the maps, run the planning_simulator, and start autonomous driving. Make sure to save the rosbag during this driving session using the following command:</p> <pre><code>ros2 bag record /tf -o /tmp/bag2lanelet_sample.bag\n</code></pre> <p> </p> <p>After completing the drive, you can run the <code>bag2lanelet.py</code> script. This requires specifying the output directory, lane width and MGRS coordinates:</p> <pre><code>./bag2lanelet.py /tmp/bag2lanelet_sample.bag /tmp/bag2lanelet_sample -l 3.0 -m 54SUE\n</code></pre> <p>The map will be saved in the specified directory, following the naming convention <code>&lt;date&gt;-lanelet2_map.osm</code>. The map generated will appear like this. You can see the example result in ./example/lanelet2_map.osm.</p> <p>When you relaunch the planning_simulator with the new lanelet2 map, you will see the following.</p> <p> </p> <p>Please note that at this stage, although this map works with Autoware, the shape of the lanes will appear jagged. (Refer to the 'Limitations' section for more details.) While this is an issue that should be addressed in the future, it can currently be resolved by loading it in Vector Map Builder as follows.</p> <p>Following the documentation of the Vector Map Builder, import the generated Lanelet2 map. You can see the refined lane on the application.</p> <p> </p> <p>Then, Export the map. You can run the planning_simulator with the refined lanelet2 map and see how it goes on the Rviz.</p> <p> </p>"},{"location":"bag2lanelet/#requirements","title":"Requirements","text":"<pre><code>sudo apt update\nsudo apt install ros-humble-tf-transformations ros-humble-tf-transformations\npip install -r requirements.txt\n</code></pre>"},{"location":"bag2lanelet/#usage","title":"Usage","text":"<p>Check <code>./bag2lanelet.py --help</code></p>"},{"location":"bag2lanelet/#generate-lanelet2-file","title":"generate lanelet2 file","text":"<p>For given lane width and MGRS coordinate.</p> <pre><code>./bag2lanelet.py /home/autoware/rosbag/sample .  -l 3.0 -m 54SUE\n</code></pre>"},{"location":"bag2lanelet/#generate-trajectory-file-for-vector-map-builder","title":"generate trajectory file for Vector Map Builder","text":"<pre><code>./bag2trajectory.py /home/autoware/rosbag/sample sample.csv\n</code></pre>"},{"location":"bag2lanelet/#limitations","title":"Limitations","text":"<p>Here is the limitations of this package. Contributions to further improvements are more than welcome.</p> <ul> <li>Due to the low conversion accuracy from MGRS to latitude and longitude in this script, the lanes in the output lanelet.osm appear jagged. Importing and then exporting through vector_map_builder corrects these values with high accuracy.</li> </ul>"},{"location":"common/autoware_debug_tools/","title":"Autoware Debug Tools","text":""},{"location":"common/autoware_debug_tools/#autoware-debug-tools","title":"Autoware Debug Tools","text":"<p>This package provides tools for debugging Autoware.</p>"},{"location":"common/autoware_debug_tools/#processing-time-visualizer","title":"Processing Time Visualizer","text":"<p>This tool visualizes <code>tier4_debug_msgs/msg/ProcessingTimeTree</code> messages.</p>"},{"location":"common/autoware_debug_tools/#usage","title":"Usage","text":"<ol> <li> <p>Run the following command to start the visualizer.</p> <pre><code>ros2 run autoware_debug_tools processing_time_visualizer\n</code></pre> </li> <li> <p>Select a topic to visualize.</p> <p></p> </li> <li> <p>Then, the visualizer will show the processing time tree.</p> <p></p> </li> </ol>"},{"location":"common/autoware_debug_tools/#summarized-output","title":"summarized output","text":"<p>Running with <code>--summarize</code>, it will output the summarized information.</p> <pre><code>&gt; ros2 run autoware_debug_tools processing_time_visualizer --summarize\n\nobjectsCallback: 17.99 [ms], run count: 1\n    \u251c\u2500\u2500 removeStaleTrafficLightInfo: 0.00 [ms], run count: 1\n    \u251c\u2500\u2500 updateObjectData: 0.03 [ms], run count: 13\n    \u251c\u2500\u2500 getCurrentLanelets: 4.81 [ms], run count: 13\n    \u2502   \u251c\u2500\u2500 checkCloseLaneletCondition: 2.43 [ms], run count: 130\n    \u2502   \u251c\u2500\u2500 isDuplicated: 0.02 [ms], run count: 17\n    \u2502   \u2514\u2500\u2500 calculateLocalLikelihood: 0.66 [ms], run count: 12\n    \u251c\u2500\u2500 updateRoadUsersHistory: 0.30 [ms], run count: 13\n    \u2514\u2500\u2500 getPredictedReferencePath: 5.47 [ms], run count: 5\n        \u251c\u2500\u2500 predictObjectManeuver: 0.40 [ms], run count: 5\n        \u2502   \u2514\u2500\u2500 predictObjectManeuverByLatDiffDistance: 0.34 [ms], run count: 5\n        \u2502       \u2514\u2500\u2500 calcRightLateralOffset: 0.03 [ms], run count: 12\n        \u251c\u2500\u2500 calculateManeuverProbability: 0.01 [ms], run count: 5\n        \u2514\u2500\u2500 addReferencePaths: 4.66 [ms], run count: 15\n            \u251c\u2500\u2500 updateFuturePossibleLanelets: 0.08 [ms], run count: 8\n            \u2514\u2500\u2500 convertPathType: 4.29 [ms], run count: 8\n</code></pre>"},{"location":"common/autoware_debug_tools/#system-usage-monitor","title":"System Usage Monitor","text":"<p>The purpose of the System Usage Monitor is to monitor, visualize and publish the CPU usage and memory usage of the ROS processes. By providing a real-time terminal-based visualization, users can easily confirm the cpu and memory usage as in the picture below.</p> <p></p> <p>You can run the program by the following command.</p> <pre><code>ros2 run autoware_debug_tools system_usage_monitor\n</code></pre>"},{"location":"common/autoware_debug_tools/#system-performance-plotter","title":"System Performance Plotter","text":"<p>This script plots the following metrics by each Autoware's module.</p> <ul> <li>processing time</li> <li>CPU usage</li> <li>memory usage</li> </ul>"},{"location":"common/autoware_debug_tools/#usage_1","title":"Usage","text":"<p>Run the following commands according to your purpose.</p> <pre><code># plot processing time\nros2 run autoware_debug_tools processing_time_plotter &lt;bag-path&gt;\n\n# plot CPU usage\nros2 run autoware_debug_tools cpu_usage_plotter &lt;bag-path&gt;\n\n# plot memory usage\nros2 run autoware_debug_tools memory_usage_plotter &lt;bag-path&gt;\n</code></pre> <p>There are several options.</p> <ul> <li><code>-c</code>:<ul> <li>can filter modules in the specific component (e.g. <code>all</code>, <code>planning</code>, <code>system</code>, etc).</li> </ul> </li> <li><code>-n &lt;number&gt;</code>:<ul> <li>can pick up top <code>&lt;number&gt;</code> critical modules.</li> </ul> </li> <li><code>-g &lt;text&gt;</code><ul> <li>can filter the modules which include <code>&lt;text&gt;</code>.</li> </ul> </li> <li><code>-y &lt;val&gt;</code><ul> <li>can set the height of the plot to <code>&lt;val&gt;</code>.</li> </ul> </li> </ul>"},{"location":"common/autoware_debug_tools/#examples","title":"Examples","text":"<pre><code>ros2 run autoware_debug_tools processing_time_plotter &lt;bag-path&gt; -c planning -g behavior_path -y 300\n</code></pre> <pre><code>ros2 run autoware_debug_tools cpu_usage_plotter &lt;bag-path&gt; -n 20\n</code></pre>"},{"location":"common/mission_planner_rviz_plugin/","title":"mission_planner_rviz_plugin","text":""},{"location":"common/mission_planner_rviz_plugin/#mission_planner_rviz_plugin","title":"mission_planner_rviz_plugin","text":""},{"location":"common/mission_planner_rviz_plugin/#mrmgoaltool","title":"MrmGoalTool","text":"<p>This is a copy of <code>rviz_default_plugins::tools::GoalTool</code>. Used together with the RouteSelectorPanel to set the MRM route. After adding the tool, change the topic name to <code>/rviz/route_selector/mrm/goal</code> from the topic property panel in rviz.</p>"},{"location":"common/mission_planner_rviz_plugin/#routeselectorpanel","title":"RouteSelectorPanel","text":"<p>This panel shows the main and mrm route state in the route_selector and the route states in the mission_planner. Additionally, it provides clear and set functions for each main route and mrm route.</p> Trigger Action main route clear button call <code>/planning/mission_planning/route_selector/main/clear_route</code> mrm route clear button call <code>/planning/mission_planning/route_selector/mrm/clear_route</code> <code>/rviz/route_selector/main/goal</code> topic call <code>/planning/mission_planning/route_selector/main/set_waypoint_route</code> <code>/rviz/route_selector/mrm/goal</code> topic call <code>/planning/mission_planning/route_selector/mrm/set_waypoint_route</code>"},{"location":"common/rtc_manager_rviz_plugin/","title":"rtc_manager_rviz_plugin","text":""},{"location":"common/rtc_manager_rviz_plugin/#rtc_manager_rviz_plugin","title":"rtc_manager_rviz_plugin","text":""},{"location":"common/rtc_manager_rviz_plugin/#purpose","title":"Purpose","text":"<p>The purpose of this Rviz plugin is</p> <ol> <li> <p>To display each content of RTC status.</p> </li> <li> <p>To switch each module of RTC auto mode.</p> </li> <li> <p>To change RTC cooperate commands by button.</p> </li> </ol> <p></p>"},{"location":"common/rtc_manager_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/rtc_manager_rviz_plugin/#input","title":"Input","text":"Name Type Description <code>/api/external/get/rtc_status</code> <code>tier4_rtc_msgs::msg::CooperateStatusArray</code> The statuses of each Cooperate Commands"},{"location":"common/rtc_manager_rviz_plugin/#output","title":"Output","text":"Name Type Description <code>/api/external/set/rtc_commands</code> <code>tier4_rtc_msgs::src::CooperateCommands</code> The Cooperate Commands for each planning <code>/planning/enable_auto_mode/*</code> <code>tier4_rtc_msgs::src::AutoMode</code> The Cooperate Commands mode for each planning module"},{"location":"common/rtc_manager_rviz_plugin/#howtouse","title":"HowToUse","text":"<ol> <li> <p>Start rviz and select panels/Add new panel.    </p> </li> <li> <p>tier4_state_rviz_plugin/RTCManagerPanel and press OK.    </p> </li> </ol>"},{"location":"common/tier4_automatic_goal_rviz_plugin/","title":"tier4_automatic_goal_rviz_plugin","text":""},{"location":"common/tier4_automatic_goal_rviz_plugin/#tier4_automatic_goal_rviz_plugin","title":"tier4_automatic_goal_rviz_plugin","text":""},{"location":"common/tier4_automatic_goal_rviz_plugin/#purpose","title":"Purpose","text":"<ol> <li> <p>Defining a <code>GoalsList</code> by adding goals using <code>RvizTool</code> (Pose on the map).</p> </li> <li> <p>Automatic execution of the created <code>GoalsList</code> from the selected goal - it can be stopped and restarted.</p> </li> <li> <p>Looping the current <code>GoalsList</code>.</p> </li> <li> <p>Saving achieved goals to a file.</p> </li> <li> <p>Plan the route to one (single) selected goal and starting that route - it can be stopped and restarted.</p> </li> <li> <p>Remove any goal from the list or clear the current route.</p> </li> <li> <p>Save the current <code>GoalsList</code> to a file and load the list from the file.</p> </li> <li> <p>The application enables/disables access to options depending on the current state.</p> </li> <li> <p>The saved <code>GoalsList</code> can be executed without using a plugin - using a node <code>automatic_goal_sender</code>.</p> </li> </ol>"},{"location":"common/tier4_automatic_goal_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/tier4_automatic_goal_rviz_plugin/#input","title":"Input","text":"Name Type Description <code>/api/operation_mode/state</code> <code>autoware_adapi_v1_msgs::msg::OperationModeState</code> The topic represents the state of operation mode <code>/api/routing/state</code> <code>autoware_adapi_v1_msgs::msg::RouteState</code> The topic represents the state of route <code>/rviz2/automatic_goal/goal</code> <code>geometry_msgs::msgs::PoseStamped</code> The topic for adding goals to GoalsList"},{"location":"common/tier4_automatic_goal_rviz_plugin/#output","title":"Output","text":"Name Type Description <code>/api/operation_mode/change_to_autonomous</code> <code>autoware_adapi_v1_msgs::srv::ChangeOperationMode</code> The service to change operation mode to autonomous <code>/api/operation_mode/change_to_stop</code> <code>autoware_adapi_v1_msgs::srv::ChangeOperationMode</code> The service to change operation mode to stop <code>/api/routing/set_route_points</code> <code>autoware_adapi_v1_msgs::srv::SetRoutePoints</code> The service to set route <code>/api/routing/clear_route</code> <code>autoware_adapi_v1_msgs::srv::ClearRoute</code> The service to clear route state <code>/rviz2/automatic_goal/markers</code> <code>visualization_msgs::msg::MarkerArray</code> The topic to visualize goals as rviz markers"},{"location":"common/tier4_automatic_goal_rviz_plugin/#howtouse","title":"HowToUse","text":"<ol> <li> <p>Start rviz and select panels/Add new panel.</p> <p></p> </li> <li> <p>Select <code>tier4_automatic_goal_rviz_plugin/AutowareAutomaticGoalPanel</code> and press OK.</p> </li> <li> <p>Select Add a new tool.</p> <p></p> </li> <li> <p>Select <code>tier4_automatic_goal_rviz_plugin/AutowareAutomaticGoalTool</code> and press OK.</p> </li> <li> <p>Add goals visualization as markers to <code>Displays</code>.</p> <p></p> </li> <li> <p>Append goals to the <code>GoalsList</code> to be achieved using <code>2D Append Goal</code> - in such a way that routes can be planned.</p> </li> <li> <p>Start sequential planning and goal achievement by clicking <code>Send goals automatically</code></p> <p></p> </li> <li> <p>You can save <code>GoalsList</code> by clicking <code>Save to file</code>.</p> </li> <li> <p>After saving, you can run the <code>GoalsList</code> without using a plugin also:</p> <ul> <li>example: <code>ros2 launch tier4_automatic_goal_rviz_plugin automatic_goal_sender.launch.xml goals_list_file_path:=\"/tmp/goals_list.yaml\" goals_achieved_dir_path:=\"/tmp/\"</code><ul> <li><code>goals_list_file_path</code> - is the path to the saved <code>GoalsList</code> file to be loaded</li> <li><code>goals_achieved_dir_path</code> - is the path to the directory where the file <code>goals_achieved.log</code> will be created and the achieved goals will be written to it</li> </ul> </li> </ul> </li> </ol>"},{"location":"common/tier4_automatic_goal_rviz_plugin/#hints","title":"Hints","text":"<p>If the application (Engagement) goes into <code>ERROR</code> mode (usually returns to <code>EDITING</code> later), it means that one of the services returned a calling error (<code>code!=0</code>). In this situation, check the terminal output for more information.</p> <ul> <li>Often it is enough to try again.</li> <li>Sometimes a clearing of the current route is required before retrying.</li> </ul>"},{"location":"common/tier4_automatic_goal_rviz_plugin/#material-design-icons","title":"Material Design Icons","text":"<p>This project uses Material Design Icons by Google. These icons are used under the terms of the Apache License, Version 2.0.</p> <p>Material Design Icons are a collection of symbols provided by Google that are used to enhance the user interface of applications, websites, and other digital products.</p>"},{"location":"common/tier4_automatic_goal_rviz_plugin/#license","title":"License","text":"<p>The Material Design Icons are licensed under the Apache License, Version 2.0. You may obtain a copy of the License at:</p> <p>http://www.apache.org/licenses/LICENSE-2.0</p> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"common/tier4_automatic_goal_rviz_plugin/#acknowledgments","title":"Acknowledgments","text":"<p>We would like to express our gratitude to Google for making these icons available to the community, helping developers and designers enhance the visual appeal and user experience of their projects.</p>"},{"location":"common/tier4_control_rviz_plugin/","title":"tier4_control_rviz_plugin","text":""},{"location":"common/tier4_control_rviz_plugin/#tier4_control_rviz_plugin","title":"tier4_control_rviz_plugin","text":"<p>This package is to mimic external control for simulation.</p>"},{"location":"common/tier4_control_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"common/tier4_control_rviz_plugin/#input","title":"Input","text":"Name Type Description <code>/control/current_gate_mode</code> <code>tier4_control_msgs::msg::GateMode</code> Current GATE mode <code>/vehicle/status/velocity_status</code> <code>autoware_vehicle_msgs::msg::VelocityReport</code> Current velocity status <code>/api/autoware/get/engage</code> <code>tier4_external_api_msgs::srv::Engage</code> Getting Engage <code>/vehicle/status/gear_status</code> <code>autoware_vehicle_msgs::msg::GearReport</code> The state of GEAR"},{"location":"common/tier4_control_rviz_plugin/#output","title":"Output","text":"Name Type Description <code>/control/gate_mode_cmd</code> <code>tier4_control_msgs::msg::GateMode</code> GATE mode <code>/external/selected/control_cmd</code> <code>autoware_control_msgs::msg::ControlCommand</code> Control command <code>/external/selected/gear_cmd</code> <code>autoware_vehicle_msgs::msg::GearCommand</code> GEAR"},{"location":"common/tier4_control_rviz_plugin/#usage","title":"Usage","text":"<ol> <li> <p>Start rviz and select Panels.</p> <p></p> </li> <li> <p>Select tier4_control_rviz_plugin/ManualController and press OK.</p> <p></p> </li> <li> <p>Enter velocity in \"Set Cruise Velocity\" and Press the button to confirm. You can notice that GEAR shows D (DRIVE).</p> <p></p> </li> <li> <p>Press \"Enable Manual Control\" and you can notice that \"GATE\" and \"Engage\" turn \"Ready\" and the vehicle starts!</p> <p></p> </li> </ol>"},{"location":"common/tier4_debug_rviz_plugin/","title":"tier4_debug_rviz_plugin","text":""},{"location":"common/tier4_debug_rviz_plugin/#tier4_debug_rviz_plugin","title":"tier4_debug_rviz_plugin","text":"<p>This package is including jsk code. Note that jsk_overlay_utils.cpp and jsk_overlay_utils.hpp are BSD license.</p>"},{"location":"common/tier4_debug_rviz_plugin/#plugins","title":"Plugins","text":""},{"location":"common/tier4_debug_rviz_plugin/#float32multiarraystampedpiechart","title":"Float32MultiArrayStampedPieChart","text":"<p>Pie chart from <code>tier4_debug_msgs::msg::Float32MultiArrayStamped</code>.</p> <p></p>"},{"location":"common/tier4_debug_tools/","title":"tier4_debug_tools","text":""},{"location":"common/tier4_debug_tools/#tier4_debug_tools","title":"tier4_debug_tools","text":"<p>This package provides useful features for debugging Autoware.</p>"},{"location":"common/tier4_debug_tools/#usage","title":"Usage","text":""},{"location":"common/tier4_debug_tools/#tf2pose","title":"tf2pose","text":"<p>This tool converts any <code>tf</code> to <code>pose</code> topic. With this tool, for example, you can plot <code>x</code> values of <code>tf</code> in <code>rqt_multiplot</code>.</p> <pre><code>ros2 run tier4_debug_tools tf2pose {tf_from} {tf_to} {hz}\n</code></pre> <p>Example:</p> <pre><code>$ ros2 run tier4_debug_tools tf2pose base_link ndt_base_link 100\n\n$ ros2 topic echo /tf2pose/pose -n1\nheader:\n  seq: 13\nstamp:\n    secs: 1605168366\nnsecs: 549174070\nframe_id: \"base_link\"\npose:\n  position:\n    x: 0.0387684271191\n    y: -0.00320360406477\n    z: 0.000276674520819\n  orientation:\n    x: 0.000335221893885\n    y: 0.000122020672186\n    z: -0.00539673212896\n    w: 0.999985368502\n---\n</code></pre>"},{"location":"common/tier4_debug_tools/#pose2tf","title":"pose2tf","text":"<p>This tool converts any <code>pose</code> topic to <code>tf</code>.</p> <pre><code>ros2 run tier4_debug_tools pose2tf {pose_topic_name} {tf_name}\n</code></pre> <p>Example:</p> <pre><code>$ ros2 run tier4_debug_tools pose2tf /localization/pose_estimator/pose ndt_pose\n\n$ ros2 run tf tf_echo ndt_pose ndt_base_link 100\nAt time 1605168365.449\n- Translation: [0.000, 0.000, 0.000]\n- Rotation: in Quaternion [0.000, 0.000, 0.000, 1.000]\nin RPY (radian) [0.000, -0.000, 0.000]\nin RPY (degree) [0.000, -0.000, 0.000]\n</code></pre>"},{"location":"common/tier4_debug_tools/#stop_reason2pose","title":"stop_reason2pose","text":"<p>This tool extracts <code>pose</code> from <code>stop_reasons</code>. Topics without numbers such as <code>/stop_reason2pose/pose/detection_area</code> are the nearest stop_reasons, and topics with numbers are individual stop_reasons that are roughly matched with previous ones.</p> <pre><code>ros2 run tier4_debug_tools stop_reason2pose {stop_reason_topic_name}\n</code></pre> <p>Example:</p> <pre><code>$ ros2 run tier4_debug_tools stop_reason2pose /planning/scenario_planning/status/stop_reasons\n\n$ ros2 topic list | ag stop_reason2pose\n/stop_reason2pose/pose/detection_area\n/stop_reason2pose/pose/detection_area_1\n/stop_reason2pose/pose/obstacle_stop\n/stop_reason2pose/pose/obstacle_stop_1\n\n$ ros2 topic echo /stop_reason2pose/pose/detection_area -n1\nheader:\n  seq: 1\nstamp:\n    secs: 1605168355\nnsecs:    821713\nframe_id: \"map\"\npose:\n  position:\n    x: 60608.8433457\n    y: 43886.2410876\n    z: 44.9078212441\n  orientation:\n    x: 0.0\n    y: 0.0\n    z: -0.190261378408\n    w: 0.981733470901\n---\n</code></pre>"},{"location":"common/tier4_debug_tools/#stop_reason2tf","title":"stop_reason2tf","text":"<p>This is an all-in-one script that uses <code>tf2pose</code>, <code>pose2tf</code>, and <code>stop_reason2pose</code>. With this tool, you can view the relative position from base_link to the nearest stop_reason.</p> <pre><code>ros2 run tier4_debug_tools stop_reason2tf {stop_reason_name}\n</code></pre> <p>Example:</p> <pre><code>$ ros2 run tier4_debug_tools stop_reason2tf obstacle_stop\nAt time 1605168359.501\n- Translation: [0.291, -0.095, 0.266]\n- Rotation: in Quaternion [0.007, 0.011, -0.005, 1.000]\nin RPY (radian) [0.014, 0.023, -0.010]\nin RPY (degree) [0.825, 1.305, -0.573]\n</code></pre>"},{"location":"common/tier4_debug_tools/#lateral_error_publisher","title":"lateral_error_publisher","text":"<p>This node calculate the control error and localization error in the trajectory normal direction as shown in the figure below.</p> <p></p> <p>Set the reference trajectory, vehicle pose and ground truth pose in the launch file.</p> <pre><code>ros2 launch tier4_debug_tools lateral_error_publisher.launch.xml\n</code></pre>"},{"location":"common/tier4_logging_level_configure_rviz_plugin/","title":"tier4_logging_level_configure_rviz_plugin","text":""},{"location":"common/tier4_logging_level_configure_rviz_plugin/#tier4_logging_level_configure_rviz_plugin","title":"tier4_logging_level_configure_rviz_plugin","text":"<p>This package provides an rviz_plugin that can easily change the logger level of each node.</p> <p></p> <p>This plugin dispatches services to the \"logger name\" associated with \"nodes\" specified in YAML, adjusting the logger level.</p> <p>Warning</p> <p>It is highly recommended to use this plugin when you're attempting to print any debug information. Furthermore, it is strongly advised to avoid using the logging level INFO, as it might flood the terminal with your information, potentially causing other useful information to be missed.</p> <p>Note</p> <p>To add your logger to the list, simply include the <code>node_name</code> and <code>logger_name</code> in the logger_config.yaml under the corresponding component or module. If the relevant component or module is not listed, you may add them yourself.</p> <p>Note</p> <p>As of November 2023, in ROS 2 Humble, users are required to initiate a service server in the node to use this feature. (This might be integrated into ROS standards in the future.) For easy service server generation, you can use the LoggerLevelConfigure utility.</p>"},{"location":"common/tier4_logging_level_configure_rviz_plugin/#how-to-use-the-plugin","title":"How to use the plugin","text":"<p>In RVIZ2, go to Panels and add LoggingLevelConfigureRVizPlugin. Then, search for the node you're interested in and select the corresponding logging level to print the logs.</p>"},{"location":"common/tier4_logging_level_configure_rviz_plugin/#how-to-add-or-find-your-logger-name","title":"How to add or find your logger name","text":"<p>Because there are no available ROS 2 CLI commands to list loggers, there isn't a straightforward way to check your logger name. Additionally, the following assumes that you already know which node you're working with.</p>"},{"location":"common/tier4_logging_level_configure_rviz_plugin/#for-logger-as-a-class-member-variable","title":"For logger as a class member variable","text":"<p>If your class doesn't have an <code>rclcpp::Logger</code> member variable, you can start by including one yourself:</p> <pre><code>mutable rclcpp::Logger logger_;\n</code></pre> <p>If your node already has a logger, it should, under normal circumstances, be similar to the node's name.</p> <p>For instance, if the node name is <code>/some_component/some_node/node_child</code>, the <code>logger_name</code> would be <code>some_component.some_node.node_child</code>.</p> <p>Should your log not print as expected, one approach is to initially set your logging level in the code to info, like so:</p> <pre><code>RCLCPP_INFO(logger_, \"Print something here.\");\n</code></pre> <p>This will result in something like the following being printed in the terminal:</p> <pre><code>[component_container_mt-36] [INFO 1711949149.735437551] [logger_name]: Print something here. (func() at /path/to/code:line_number)\n</code></pre> <p>Afterward, you can simply copy the <code>logger_name</code>.</p> <p>Warning</p> <p>Remember to revert your code to the appropriate logging level after testing. </p><pre><code>RCLCPP_DEBUG(logger_, \"Print something here.\");\n</code></pre>"},{"location":"common/tier4_logging_level_configure_rviz_plugin/#for-libraries","title":"For libraries","text":"<p>When dealing with libraries, such as utility functions, you may need to add the logger manually. Here's an example:</p> <pre><code>RCLCPP_WARN(\nrclcpp::get_logger(\"some_component\").get_child(\"some_child\").get_child(\"some_child2\"),\n\"Print something here.\");\n</code></pre> <p>In this scenario, the <code>logger_name</code> would be <code>some_component.some_child.some_child2</code>.</p>"},{"location":"common/tier4_screen_capture_rviz_plugin/","title":"tier4_screen_capture_rviz_plugin","text":""},{"location":"common/tier4_screen_capture_rviz_plugin/#tier4_screen_capture_rviz_plugin","title":"tier4_screen_capture_rviz_plugin","text":""},{"location":"common/tier4_screen_capture_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin captures the screen of rviz.</p>"},{"location":"common/tier4_screen_capture_rviz_plugin/#interface","title":"Interface","text":"Name Type Description <code>/debug/capture/video</code> <code>std_srvs::srv::Trigger</code> Trigger to start screen capturing. <code>/debug/capture/video_with_buffer</code> <code>std_srvs::srv::Trigger</code> Trigger to start screen capturing with buffer. <code>/debug/capture/screen_shot</code> <code>std_srvs::srv::Trigger</code> Trigger to capture screen shot."},{"location":"common/tier4_screen_capture_rviz_plugin/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>This is only for debug or analyze. The <code>capture screen</code> button is still beta version which can slow frame rate. set lower frame rate according to PC spec.</p>"},{"location":"common/tier4_screen_capture_rviz_plugin/#usage","title":"Usage","text":"<ol> <li>Start rviz and select panels/Add new panel.    </li> </ol>"},{"location":"common/tier4_simulated_clock_rviz_plugin/","title":"tier4_simulated_clock_rviz_plugin","text":""},{"location":"common/tier4_simulated_clock_rviz_plugin/#tier4_simulated_clock_rviz_plugin","title":"tier4_simulated_clock_rviz_plugin","text":""},{"location":"common/tier4_simulated_clock_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin allows publishing and controlling the simulated ROS time.</p>"},{"location":"common/tier4_simulated_clock_rviz_plugin/#output","title":"Output","text":"Name Type Description <code>/clock</code> <code>rosgraph_msgs::msg::Clock</code> the current simulated time"},{"location":"common/tier4_simulated_clock_rviz_plugin/#how-to-use-the-plugin","title":"How to use the plugin","text":"<ol> <li> <p>Launch planning simulator with <code>use_sim_time:=true</code>.</p> <pre><code>ros2 launch autoware_launch planning_simulator.launch.xml map_path:=$HOME/autoware_map/sample-map-planning vehicle_model:=sample_vehicle sensor_model:=sample_sensor_kit use_sim_time:=true\n</code></pre> <p>Warning If you launch the planning simulator without adding the <code>tier4_simulated_clock_rviz_plugin</code>, your simulation will not be running. You'll not even be able to place the initial and the goal poses.</p> </li> <li> <p>Start rviz and select panels/Add new panel.</p> <p></p> </li> <li> <p>Select tier4_clock_rviz_plugin/SimulatedClock and press OK.</p> <p></p> </li> <li> <p>Use the added panel to control how the simulated clock is published.</p> <p></p> <ol> <li>Pause button: pause/resume the clock.</li> <li>Speed: speed of the clock relative to the system clock.</li> <li>Rate: publishing rate of the clock.</li> <li>Step button: advance the clock by the specified time step.</li> <li>Time step: value used to advance the clock when pressing the step button d).</li> <li>Time unit: time unit associated with the value from e).</li> </ol> <p>Warning If you set the time step too large, your simulation will go haywire.</p> </li> </ol>"},{"location":"common/tier4_target_object_type_rviz_plugin/","title":"tier4_target_object_type_rviz_plugin","text":""},{"location":"common/tier4_target_object_type_rviz_plugin/#tier4_target_object_type_rviz_plugin","title":"tier4_target_object_type_rviz_plugin","text":"<p>This plugin allows you to check which types of the dynamic object is being used by each planner.</p> <p></p>"},{"location":"common/tier4_target_object_type_rviz_plugin/#limitations","title":"Limitations","text":"<p>Currently, which parameters of which module to check are hardcoded. In the future, this will be parameterized using YAML.</p>"},{"location":"control/stop_accel_evaluator/","title":"Stop Accel Evaluator","text":""},{"location":"control/stop_accel_evaluator/#stop-accel-evaluator","title":"Stop Accel Evaluator","text":"<p>The role of this node is to evaluate how smooth it is when a vehicle stops by calculating vehicle acceleration just before stopping.</p>"},{"location":"control/stop_accel_evaluator/#how-to-use","title":"How to use","text":"<pre><code>ros2 launch stop_accel_evaluator stop_accel_evaluator.launch.xml\n</code></pre> <p>Then you can see <code>stop_accel_evaluator/stop_accel</code> topic. This topic is published only when a vehicle stops.</p>"},{"location":"control/vehicle_cmd_analyzer/","title":"Vehicle Command Analyzer description","text":""},{"location":"control/vehicle_cmd_analyzer/#vehicle-command-analyzer-description","title":"Vehicle Command Analyzer description","text":""},{"location":"control/vehicle_cmd_analyzer/#overview","title":"Overview","text":"<p>This is a visualization tool for vehicle commands. You need plotjuggler to plot.</p> <p>The following time series data will be plotted on the left side.</p> <ul> <li>Velocity</li> <li>Acceleration (acceleration and derivative of velocity)</li> <li>Jerk (derivative of acceleration and second derivative of velocity)</li> <li>Lateral acceleration</li> </ul> <p>The following data will be plotted on the right side.</p> <ul> <li>XY plot of jerk-acceleration</li> </ul> <p></p>"},{"location":"control/vehicle_cmd_analyzer/#how-to-use","title":"How to use","text":"<ol> <li> <p>Launch the node.</p> <pre><code>ros2 launch vehicle_cmd_analyzer vehicle_cmd_analyzer.launch.xml vehicle_model:=lexus\n</code></pre> </li> <li> <p>Launch plotjuggler.</p> <pre><code>ros2 run plotjuggler plotjuggler\n</code></pre> </li> <li> <p>Load layout.xml from File-&gt;Layout.    </p> </li> <li>Press ok in the confirmation dialog.</li> <li>Select<code>/vehicle_cmd_analyzer/debug_values</code>.    </li> </ol>"},{"location":"control_data_collecting_tool/","title":"Control data collecting tool","text":""},{"location":"control_data_collecting_tool/#control-data-collecting-tool","title":"Control data collecting tool","text":"<p>This package provides tools for automatically collecting data using pure pursuit control within a specified rectangular area.</p> <p></p>"},{"location":"control_data_collecting_tool/#overview","title":"Overview","text":"<ul> <li>This package aims to collect a dataset consisting of control inputs (i.e. <code>control_cmd</code>) and observation variables (i.e. <code>kinematic_state</code>, <code>steering_status</code>, etc).</li> <li>The collected dataset can be used as training dataset for learning-based controllers, including smart_mpc.</li> <li>The data collecting approach is as follows:<ul> <li>Setting a figure-eight target trajectory within the specified rectangular area.</li> <li>Following the trajectory using a pure pursuit control law.</li> <li>Adding noises to the trajectory and the control command for data diversity, improving the prediction accuracy of learning model.</li> </ul> </li> </ul>"},{"location":"control_data_collecting_tool/#how-to-use","title":"How to use","text":"<ol> <li> <p>Launch Autoware.</p> <pre><code>ros2 launch autoware_launch planning_simulator.launch.xml map_path:=$HOME/autoware_map/sample-map-planning vehicle_model:=sample_vehicle sensor_model:=sample_sensor_kit\n</code></pre> </li> <li> <p>Set an initial pose, see here.</p> </li> <li> <p>Add <code>DataCollectingAreaSelectionTool</code> rviz plugin.</p> <p></p> </li> <li> <p>Launch control_data_collecting_tool.</p> <pre><code>ros2 launch control_data_collecting_tool control_data_collecting_tool.launch.py\n</code></pre> </li> <li> <p>Add visualization in rviz:</p> <ul> <li><code>/data_collecting_area</code><ul> <li>Type: Polygon</li> </ul> </li> <li><code>/data_collecting_trajectory_marker_array</code><ul> <li>Type: MarkerArray</li> </ul> </li> <li><code>/data_collecting_lookahead_marker_array</code><ul> <li>Type: MarkerArray</li> </ul> </li> </ul> </li> <li> <p>Select <code>DataCollectingAreaSelectionTool</code> plugin.</p> <p></p> <p>Highlight the data collecting area by dragging the mouse over it.</p> <p></p> <p>[!NOTE] You cannot change the data collecting area while driving.</p> </li> <li> <p>start recording rosbag data. For example, run the following command:</p> <pre><code>ros2 bag record /localization/kinematic_state /localization/acceleration /vehicle/status/steering_status /sensing/imu/imu_data /system/operation_mode/state /vehicle/status/control_mode /external/selected/control_cmd /external/selected/gear_cmd /data_collecting_trajectory\n</code></pre> </li> <li> <p>Click the <code>LOCAL</code> button on <code>OperationMode</code> in <code>AutowareStatePanel</code>.</p> <p></p> <p>Then, data collecting starts.</p> <p></p> </li> <li> <p>If you want to stop data collecting automatic driving, run the following command</p> <pre><code>ros2 topic pub /data_collecting_stop_request std_msgs/msg/Bool \"data: true\" --once\n</code></pre> </li> <li> <p>If you want to restart data collecting automatic driving, run the following command</p> </li> </ol> <pre><code>ros2 topic pub /data_collecting_stop_request std_msgs/msg/Bool \"data: false\" --once\n</code></pre>"},{"location":"control_data_collecting_tool/#parameter","title":"Parameter","text":"<p>ROS 2 params in <code>/data_collecting_trajectory_publisher</code> node:</p> Name Type Description Default value <code>max_lateral_accel</code> <code>double</code> Max lateral acceleration limit [m/ss] 0.5 <code>lateral_error_threshold</code> <code>double</code> Lateral error threshold where applying velocity limit [m/s] 5.0 <code>yaw_error_threshold</code> <code>double</code> Yaw error threshold where applying velocity limit [rad] 0.5 <code>velocity_limit_by_tracking_error</code> <code>double</code> Velocity limit applied when tracking error exceeds threshold [m/s] 2.0 <code>mov_ave_window</code> <code>int</code> Moving average smoothing window size 50 <code>target_longitudinal_velocity</code> <code>double</code> Target longitudinal velocity [m/s] 6.0 <code>longitudinal_velocity_noise_amp</code> <code>double</code> Target longitudinal velocity additional sine noise amplitude [m/s] 0.1 <code>longitudinal_velocity_noise_min_period</code> <code>double</code> Target longitudinal velocity additional sine noise minimum period [s] 5.0 <code>longitudinal_velocity_noise_max_period</code> <code>double</code> Target longitudinal velocity additional sine noise maximum period [s] 20.0 <p>ROS 2 params in <code>/data_collecting_pure_pursuit_trajectory_follower</code> node:</p> Name Type Description Default value <code>pure_pursuit_type</code> <code>string</code> Pure pursuit type (<code>naive</code> or <code>linearized</code> steer control law ) <code>linearized</code> <code>wheel_base</code> <code>double</code> Wheel base [m] 2.79 <code>acc_kp</code> <code>double</code> Accel command proportional gain 0.5 <code>lookahead_time</code> <code>double</code> Pure pursuit lookahead time [s] 1.5 <code>min_lookahead</code> <code>double</code> Pure pursuit minimum lookahead length [m] 3.0 <code>linearized_pure_pursuit_steer_kp_param</code> <code>double</code> Linearized pure pursuit steering P gain parameter 2.0 <code>linearized_pure_pursuit_steer_kd_param</code> <code>double</code> Linearized pure pursuit steering D gain parameter 2.0 <code>stop_acc</code> <code>double</code> Accel command for stopping data collecting driving [m/ss] -2.0 <code>stop_jerk_lim</code> <code>double</code> Jerk limit for stopping data collecting driving [m/sss] 1.0 <code>lon_acc_lim</code> <code>double</code> Longitudinal acceleration limit [m/ss] 5.0 <code>lon_jerk_lim</code> <code>double</code> Longitudinal jerk limit [m/sss] 5.0 <code>steer_lim</code> <code>double</code> Steering angle limit [rad] 1.0 <code>steer_rate_lim</code> <code>double</code> Steering angle rate limit [rad/s] 1.0 <code>acc_noise_amp</code> <code>double</code> Accel command additional sine noise amplitude [m/ss] 0.01 <code>acc_noise_min_period</code> <code>double</code> Accel command additional sine noise minimum period [s] 5.0 <code>acc_noise_max_period</code> <code>double</code> Accel command additional sine noise maximum period [s] 20.0 <code>steer_noise_amp</code> <code>double</code> Steer command additional sine noise amplitude [rad] 0.01 <code>steer_noise_max_period</code> <code>double</code> Steer command additional sine noise maximum period [s] 5.0 <code>steer_noise_min_period</code> <code>double</code> Steer command additional sine noise minimum period [s] 20.0"},{"location":"driving_environment_analyzer/","title":"Driving Environment Analyzer","text":""},{"location":"driving_environment_analyzer/#driving-environment-analyzer","title":"Driving Environment Analyzer","text":"<p>\u3053\u306e\u30c4\u30fc\u30eb\u306fROSBAG\u306b\u542b\u307e\u308c\u308b\u8d70\u884c\u5c65\u6b74\u3092\u5143\u306b\u8d70\u884c\u74b0\u5883\u306eODD\u3092\u89e3\u6790\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002</p>"},{"location":"driving_environment_analyzer/#rosbagodd","title":"ROSBAG\u306e\u7279\u5b9a\u6642\u523b\u306b\u304a\u3051\u308b\u5468\u56f2\u306eODD\u3092\u89e3\u6790\u3059\u308b\u5834\u5408","text":"<p>\u3053\u306e\u5834\u5408\u306b\u306fRviz\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u3042\u308b<code>driving_environment_analyzer_rviz_panel</code>\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002</p> <p>\u73fe\u5728\u4ee5\u4e0b\u306e\u60c5\u5831\u304c\u51fa\u529b\u53ef\u80fd\u3067\u3059\u3002</p> <ul> <li>EGO\u306e\u73fe\u5728\u8eca\u901f</li> <li>\u73fe\u5728\u4f4d\u7f6e\u306e\u52fe\u914d</li> <li>EGO\u306e\u6319\u52d5</li> <li>\u73fe\u5728\u306e\u8eca\u7dda\u60c5\u5831</li> </ul> <p>\u3053\u3061\u3089\u306e\u30c4\u30fc\u30eb\u306fautoware_launch\u306b\u542b\u307e\u308c\u308b<code>logging_simulator</code>\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u307e\u305a\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u304b\u3089\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p><code>ros2 launch autoware_launch logging_simulator.launch.xml map_path:=&lt;MAP&gt; vehicle_model:=&lt;VEHICLE_NAME&gt; sensor_model:=&lt;AIP_NAME&gt; sensing:=false control:=false planning:=false perception:=false localization:=false system:=false</code></p> <p></p> <p>\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u8d77\u52d5\u6642\u306b\u5730\u56f3\u3092\u8aad\u307f\u8fbc\u3080\u305f\u3081ROSBAG\u306b\u5730\u56f3\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u304f\u3066\u3082ODD\u306e\u89e3\u6790\u304c\u53ef\u80fd\u3067\u3059\u3002\uff08\u305f\u3060\u3057\u3001\u305d\u306e\u5834\u5408\u306b\u306fROSBAG\u53d6\u5f97\u306e\u969b\u306b\u4f7f\u7528\u3057\u305f\u5730\u56f3\u3092\u6307\u5b9a\u3057\u3066\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3092\u8d77\u52d5\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\uff09</p> <p>\u6b21\u306b\u672c\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u542b\u307e\u308c\u308b\u89e3\u6790\u30c4\u30fc\u30eb\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002Rviz\u753b\u9762\u5de6\u4e0a\u90e8\u306eAdd New Panel\u304b\u3089DrivingEnvironmentAnalyzerPanel\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u3067Rviz\u5de6\u4e0b\u306b\u65b0\u3057\u304f\u64cd\u4f5c\u30d1\u30cd\u30eb\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002</p> <p> </p> <p>\u672c\u30c4\u30fc\u30eb\u306fROSBAG\u30d5\u30a1\u30a4\u30eb\u6307\u5b9a\u3057\u3066\u30ed\u30fc\u30c9\u3067\u304d\u308b\u4ed6\u3001\u8907\u6570\u306eROSBAG\u30d5\u30a1\u30a4\u30eb\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u305d\u306e\u5834\u5408\u306b\u306f\u4e8b\u524d\u306b\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067<code>metadata.yaml</code>\u306e\u751f\u6210\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002</p> <p><code>ros2 bag reindex &lt;DIR_PATH&gt; sqlite3</code></p> <p></p> <p>ROSBAG\u306e\u8aad\u307f\u8fbc\u307f\u304c\u5b8c\u4e86\u3057\u305f\u3089ODD\u3092\u89e3\u6790\u3057\u305f\u3044\u6642\u523b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6642\u523b\u306e\u6307\u5b9a\u306b\u306fUnix time\u3092\u76f4\u63a5\u6307\u5b9a\u3059\u308b\u307b\u304b\u30b9\u30e9\u30a4\u30c9\u30d0\u30fc\u3082\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\u5de6\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u65e5\u6642\u3092\u53c2\u8003\u306b\u8abf\u6574\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p> <p>\u307e\u305f\u3001\u3053\u306e\u3068\u304dViews\u306eTarget Flame\u3092<code>base_link</code>\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u6307\u5b9a\u3057\u305f\u6642\u523b\u306eEGO\u306e\u4f4d\u7f6e\u3068\u5468\u56f2\u306e\u72b6\u6cc1\u3092Rviz\u3067\u53ef\u8996\u5316\u53ef\u80fd\u3067\u3059\u3002</p> <p></p> <p>\u6642\u523b\u306e\u6307\u5b9a\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001<code>Set time stamp</code>\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3001\u6700\u5f8c\u306b<code>Analyze dynamic ODD factor</code>\u3092\u62bc\u3059\u3053\u3068\u3067\u89e3\u6790\u304c\u59cb\u307e\u308a\u307e\u3059\u3002</p> <p></p> <pre><code>[rviz2-11] ***********************************************************\n[rviz2-11]                    ODD analysis result\n[rviz2-11] ***********************************************************\n[rviz2-11] Type: TIME SPECIFIED\n[rviz2-11] Time: 2024-04-22 14:48:05\n[rviz2-11]\n[rviz2-11]\n[rviz2-11] - EGO INFO\n[rviz2-11]   [SPEED]                       : 0 [m/s]\n[rviz2-11]   [ELEVATION ANGLE]             : 0.00963597 [rad]\n[rviz2-11]\n[rviz2-11] - EGO BEHAIOVR\n[rviz2-11]   [AVOIDANCE(R)]                : NONE\n[rviz2-11]   [AVOIDANCE(L)]                : NONE\n[rviz2-11]   [LANE_CHANGE(R)]              : NONE\n[rviz2-11]   [LANE_CHANGE(L)]              : NONE\n[rviz2-11]   [START_PLANNER]               : SAFE: true COMMAND: deactivate\n[rviz2-11]   [GOAL_PLANNER]                : NONE\n[rviz2-11]   [CROSSWALK]                   : NONE\n[rviz2-11]   [INTERSECTION]                : NONE\n[rviz2-11]\n[rviz2-11] - LANE INFO\n[rviz2-11]   [ID]                          : 176126\n[rviz2-11]   [WIDTH]                       : 4.24132 [m]\n[rviz2-11]   [SHAPE]                       : STRAIGHT\n[rviz2-11]   [RIGHT LANE NUM]              : 0\n[rviz2-11]   [LEFT LANE NUM]               : 0\n[rviz2-11]   [TOTAL LANE NUM]              : 1\n[rviz2-11]   [SAME DIRECTION LANE]         : NONE\n[rviz2-11]   [OPPOSITE DIRECTION LANE]     : NONE\n[rviz2-11]   [ROAD SHOULDER]               : EXIST\n[rviz2-11]\n[rviz2-11] - SURROUND OBJECT NUM\n[rviz2-11]   [UNKNOWN]                     : 0\n[rviz2-11]   [CAR]                         : 6\n[rviz2-11]   [TRUCK]                       : 0\n[rviz2-11]   [BUS]                         : 3\n[rviz2-11]   [TRAILER]                     : 2\n[rviz2-11]   [MOTORCYCLE]                  : 0\n[rviz2-11]   [BICYCLE]                     : 0\n[rviz2-11]   [PEDESTRIAN]                  : 7\n[rviz2-11] ***********************************************************\n</code></pre>"},{"location":"driving_environment_analyzer/#rosbagodd_1","title":"ROSBAG\u5168\u4f53\u306b\u5bfe\u3057\u3066\u7d4c\u8def\u6cbf\u3044\u306eODD\u3092\u89e3\u6790\u3059\u308b\u5834\u5408","text":"<p>\u73fe\u5728\u4ee5\u4e0b\u306e\u60c5\u5831\u304c\u51fa\u529b\u53ef\u80fd\u3067\u3059\u3002</p> <ul> <li>\u8d70\u884c\u7d4c\u8def\u306e\u9577\u3055</li> <li>\u8d70\u884c\u7d4c\u8def\u306e\u8eca\u7dda\u60c5\u5831</li> <li>\u8d70\u884c\u7d4c\u8def\u306e\u6700\u5927\u30fb\u6700\u5c0f\u52fe\u914d</li> <li>\u8d70\u884c\u7d4c\u8def\u306e\u6700\u5927\u66f2\u7387</li> <li>\u8d70\u884c\u7d4c\u8def\u306e\u6700\u5927\u30fb\u6700\u5c0f\u8eca\u7dda\u5e45</li> <li>\u4ea4\u5dee\u70b9\u306e\u6709\u7121</li> <li>\u4fe1\u53f7\u6a5f\u306e\u6709\u7121</li> <li>\u6a2a\u65ad\u6b69\u9053\u306e\u6709\u7121</li> </ul> <p>\u8d77\u52d5\u6642\u306b<code>bag_path</code>\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u89e3\u6790\u3057\u305f\u3044ROSBAG\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\uff08\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u6307\u5b9a\u3082.db3\u30d5\u30a1\u30a4\u30eb\u306e\u76f4\u63a5\u6307\u5b9a\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\uff09</p> <p>\u89e3\u6790\u306b\u5fc5\u8981\u306atopic\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\uff08\u4eca\u5f8c\u5897\u3048\u308b\u53ef\u80fd\u6027\u3082\u3042\u308a\u307e\u3059\u3002\uff09</p> <ul> <li><code>/planning/mission_planning/route</code></li> <li><code>/map/vector_map</code></li> </ul> <p>\u4ee5\u4e0b\u306e\u3088\u3046\u306blaunch\u3059\u308b\u3053\u3068\u3067ODD\u306e\u89e3\u6790\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002</p> <p><code>ros2 launch driving_environment_analyzer driving_environment_analyzer.launch.xml use_map_in_bag:=true bag_path:=&lt;ROSBAG&gt;</code></p> <pre><code>[component_container-1] [INFO 1708999777.768870564] [driving_environment_analyzer]: ======================================\n[component_container-1] [INFO 1708999777.768922452] [driving_environment_analyzer]:  data is ready. start ODD analysis...\n[component_container-1] [INFO 1708999777.768933574] [driving_environment_analyzer]: ======================================\n[component_container-1] [INFO 1708999777.768967412] [driving_environment_analyzer]: - Length of total lanes : 2357.50 [m]\n[component_container-1] [INFO 1708999777.769031174] [driving_environment_analyzer]: - Length of lane that has adjacent lane : 2080.43 [m]\n[component_container-1] [INFO 1708999777.769076141] [driving_environment_analyzer]: - Length of lane that has opposite lane : 0.00 [m]\n[component_container-1] [INFO 1708999777.769101793] [driving_environment_analyzer]: - Length of lane that has no adjacent lane : 277.07 [m]\n[component_container-1] [INFO 1708999777.769225729] [driving_environment_analyzer]: - Min lane width: 3.14 [m] Max lane width: 4.94 [m]\n[component_container-1] [INFO 1708999777.769278698] [driving_environment_analyzer]: - Max curvature: 0.007967 [1/m]\n[component_container-1] [INFO 1708999777.769293161] [driving_environment_analyzer]: - Min curve radius: 125.52 [m]\n[component_container-1] [INFO 1708999777.769336094] [driving_environment_analyzer]: - Min elevation angle: -0.033037 [rad] Max elevation angle: 0.026073 [rad]\n[component_container-1] [INFO 1708999777.769403870] [driving_environment_analyzer]: - Min speed limit: 13.89 [m/s] Max speed limit: 16.67 [m/s]\n[component_container-1] [INFO 1708999777.769424648] [driving_environment_analyzer]: - Exist traffic light: true\n[component_container-1] [INFO 1708999777.769435813] [driving_environment_analyzer]: - Exist intersection: true\n[component_container-1] [INFO 1708999777.769620035] [driving_environment_analyzer]: - Exist crosswalk: true\n[component_container-1] [INFO 1708999777.769634980] [driving_environment_analyzer]: ======================================\n[component_container-1] [INFO 1708999777.769642769] [driving_environment_analyzer]:  complete ODD analysis. shutdown.\n[component_container-1] [INFO 1708999777.769650034] [driving_environment_analyzer]: ======================================\n</code></pre> <p>\u305f\u3060\u3057\u3001<code>map/vector_map</code>\u306b\u95a2\u3057\u3066\u306f<code>use_map_in_bag</code>\u3092<code>false</code>\u306b\u3059\u308b\u3053\u3068\u3067\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u5730\u56f3\u3092\u4f7f\u7528\u3057\u3066ODD\u89e3\u6790\u3092\u884c\u3046\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u305d\u306e\u5834\u5408\u3001<code>map_path</code>\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5730\u56f3\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p><code>ros2 launch driving_environment_analyzer driving_environment_analyzer.launch.xml use_map_in_bag:=false map_path:=&lt;MAP&gt; bag_path:=&lt;ROSBAG&gt;</code></p> <p>\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067ROSBAG\u306b\u5730\u56f3\u60c5\u5831\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082ODD\u89e3\u6790\u304c\u53ef\u80fd\u3067\u3059\u3002</p>"},{"location":"evaluation/tier4_metrics_rviz_plugin/","title":"tier4_metrics_rviz_plugin","text":""},{"location":"evaluation/tier4_metrics_rviz_plugin/#tier4_metrics_rviz_plugin","title":"tier4_metrics_rviz_plugin","text":""},{"location":"evaluation/tier4_metrics_rviz_plugin/#purpose","title":"Purpose","text":"<p>This plugin panel to visualize <code>planning_evaluator</code> output.</p>"},{"location":"evaluation/tier4_metrics_rviz_plugin/#inputs-outputs","title":"Inputs / Outputs","text":"Name Type Description <code>/planning/planning_evaluator/metrics</code> <code>diagnostic_msgs::msg::DiagnosticArray</code> Subscribe <code>planning_evaluator</code> output"},{"location":"evaluation/tier4_metrics_rviz_plugin/#howtouse","title":"HowToUse","text":"<ol> <li>Start rviz and select panels/Add new panel.</li> <li>Select MetricsVisualizePanel and press OK.</li> </ol>"},{"location":"localization/deviation_estimation_tools/ReadMe/","title":"deviation_estimation_tools","text":""},{"location":"localization/deviation_estimation_tools/ReadMe/#deviation_estimation_tools","title":"deviation_estimation_tools","text":""},{"location":"localization/deviation_estimation_tools/ReadMe/#1-quick-start","title":"1. Quick start","text":"<p>This repository consists of three main tools implemented on ROS2.</p> <ol> <li>Deviation Estimator</li> <li>Deviation Evaluator</li> <li>Deviation Evaluation Visualizer</li> </ol>"},{"location":"localization/deviation_estimation_tools/ReadMe/#a-estimation-step","title":"A. Estimation step","text":"<p>Here you estimate the following parameters using <code>deviation_estimator</code>.</p> <ul> <li>the standard deviation of velocity and yaw rate</li> <li>the bias of velocity and yaw rate</li> </ul> <p>Launch the node with the following command. Make sure you set the correct parameters (see Sec. 2).</p> <pre><code>ros2 launch deviation_estimator deviation_estimator.launch.xml\n</code></pre> <p>Then, you need to run either ROS bag or <code>autoware_launch</code> to provide <code>pose</code> and <code>twist</code> to <code>deviation_estimator</code>.</p> <p>If you are using rosbag, it should contain the following topics:</p> <ul> <li>Raw IMU data (default: <code>/sensing/imu/tamagawa/imu_raw</code>)</li> <li>Raw velocity data (default: <code>/vehicle/status/velocity_status</code>)</li> <li><code>/localization/pose_estimator/pose_with_covariance</code></li> <li><code>/clock</code></li> <li><code>/tf_static</code> (that contains transform from <code>base_link</code> to <code>imu_link</code>)</li> </ul> <p>NOTE that the pose and twist must be estimated with default parameters (see <code>known issues</code> section for detail).</p> <p>Play the rosbag in a different terminal:</p> <pre><code>ros2 bag play YOUR_BAG # You can also play in a faster rate, e.g. -r 5\n</code></pre> <p>You can check the results in the following three output files:</p> <ol> <li>IMU parameters (default: <code>$HOME/imu_corrector.param.yaml</code>)</li> <li>Velocity parameters (default: <code>$HOME/vehicle_velocity_converter.param.yaml</code>)</li> <li>Logs (default: <code>$HOME/output.txt</code>)</li> </ol> sample input (rosbag) <p> </p><pre><code>Files:             localized_sensors_0.db3\nBag size:          9.6 MiB\nStorage id:        sqlite3\nDuration:          76.539s\nStart:             Jul  8 2022 11:21:41.220 (1657246901.220)\nEnd:               Jul  8 2022 11:22:57.759 (1657246977.759)\nMessages:          32855\nTopic information: Topic: /localization/pose_estimator/pose_with_covariance | Type: geometry_msgs/msg/PoseWithCovarianceStamped | Count: 2162 | Serialization Format: cdr\n                   Topic: /clock | Type: rosgraph_msgs/msg/Clock | Count: 57309 | Serialization Format: cdr\n                   Topic: /tf_static | Type: tf2_msgs/msg/TFMessage | Count: 2 | Serialization Format: cdr\n                   Topic: /sensing/imu/tamagawa/imu_raw | Type: sensor_msgs/msg/Imu | Count: 8076 | Serialization Format: cdr\n                   Topic: /vehicle/status/velocity_status | Type: autoware_vehicle_msgs/msg/VelocityReport | Count: 8275 | Serialization Format: cdr\n</code></pre> sample output (output.txt) <p> </p><pre><code># Validation results\n# value: [min, max]\n[OK] coef_vx: [0.99538, 0.99593]\n[OK] stddev_vx: [0.17192, 0.19161]\n[OK] angular_velocity_offset_x: [-0.00742, -0.00727]\n[OK] angular_velocity_offset_y: [-0.00119, -0.00115]\n[OK] angular_velocity_offset_z: [0.00635, 0.00641]\n[OK] angular_velocity_stddev_xx: [0.04151, 0.04258]\n[OK] angular_velocity_stddev_yy: [0.04151, 0.04258]\n[OK] angular_velocity_stddev_zz: [0.04151, 0.04258]\n</code></pre> sample output (imu_corrector.param.yaml) <pre><code># Estimated by deviation_estimator\n/**:\n  ros__parameters:\n    angular_velocity_stddev_xx: 0.01798\n    angular_velocity_stddev_yy: 0.01798\n    angular_velocity_stddev_zz: 0.01798\n    angular_velocity_offset_x: -0.00952\n    angular_velocity_offset_y: -0.00095\n    angular_velocity_offset_z: 0.00607\n</code></pre> <p> </p> sample output (vehicle_velocity_converter.param.yaml) <pre><code># Estimated by deviation_estimator\n/**:\n  ros__parameters:\n    speed_scale_factor: 0.99507\n    velocity_stddev_xx: 0.16708\n    velocity_stddev_xx: 0.1 # Default value\nframe_id: base_link # Default value\n</code></pre> <p> </p> unit tool  If you build normally, a binary will be generated under `install/deviation_estimator/lib/`.  <pre><code>colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release --packages-up-to deviation_estimator\nsource ~/autoware/install/setup.bash\n~/autoware/install/deviation_estimator/lib/deviation_estimator/deviation_estimator_unit_tool &lt;path_to_rosbag&gt;\n</code></pre> <p> </p>"},{"location":"localization/deviation_estimation_tools/ReadMe/#b-evaluation-step","title":"B. Evaluation step","text":"<p>Here, you can evaluate the estimated standard deviation and bias using a package <code>deviation_evaluator</code>. Execute the following command:</p> <pre><code>ros2 launch deviation_evaluator deviation_evaluator.launch.xml map_path:=MAP_PATH rviz:=true in_imu:=YOUR_IMU_TOPIC_NAME in_wheel_odometry:=YOUR_VELOCITY_TOPIC_NAME\nros2 bag play YOUR_BAG\n</code></pre>"},{"location":"localization/deviation_estimation_tools/ReadMe/#c-visualization-step","title":"C. Visualization step","text":"<p>After the evaluation, run the following command to generate the final results in <code>$HOME/deviation_evaluator_sample</code>.</p> <pre><code>pip3 install -r requirements.txt\nros2 launch deviation_evaluator deviation_evaluation_visualizer.launch.xml\n</code></pre> <p>Done!</p>"},{"location":"localization/deviation_estimation_tools/ReadMe/#2-description-of-deviation-estimator","title":"2. Description of Deviation Estimator","text":""},{"location":"localization/deviation_estimation_tools/ReadMe/#overview","title":"Overview","text":"<p>The Deviation Estimator estimates the standard deviation and bias for velocity and yaw bias, by comparing the velocity and gyro observations with ground truth poses (e.g. from LiDAR-based localization).</p> <p>Here are some assumptions made for input data:</p> <ul> <li>The data should have accurate localization results. It doesn't need to be strictly precise, but data that is obviously incorrect should be avoided. In case of NDT in Autoware, it should not have any TP or NVTL warnings from the ndt_scan_matcher.</li> <li>The data should cover a reasonable duration of driving. A few minutes of data is sufficient. It is desirable to have a distance of approximately 500 meters. (For example, around 2 minutes at a speed of 15 km/h).</li> <li>The data should include sections of driving in a straight line. This is necessary for estimating velocity-related parameters. Having at least one minute of straight line driving is enough.</li> <li>The data should cover the expected speed range during operation.</li> <li>[Optional] Ideally, the data should be recorded as recently as possible. Especially in cases where IMU or tire replacement has occurred, data recorded before those changes may not provide accurate estimations.</li> <li>[Optional] The data should cover various driving behaviors expected during operation, such as right turns, left turns, acceleration, and deceleration.</li> </ul>"},{"location":"localization/deviation_estimation_tools/ReadMe/#launch","title":"Launch","text":"<p>The <code>deviation_estimator</code> can be launched with the following command.</p> <pre><code>ros2 launch deviation_estimator deviation_estimator.launch.xml\nros2 bag play YOUR_BAG # You can also play in a faster rate, e.g. -r 5\n</code></pre> <p>The parameters and input topic names can be seen in the <code>deviation_estimator.launch.xml</code> file. <code>YOUR_BAG</code> should include all the required inputs written below.</p>"},{"location":"localization/deviation_estimation_tools/ReadMe/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"localization/deviation_estimation_tools/ReadMe/#input","title":"Input","text":"Name Type Description <code>in_pose_with_covariance |</code>geometry_msgs::msg::PoseWithCovarianceStamped` Input pose <code>in_imu</code> <code>sensor_msgs::msg::Imu</code> Input IMU data <code>in_wheel_odometry</code> <code>autoware_vehicle_msgs::msg::VelocityReport</code> Input wheel odometry"},{"location":"localization/deviation_estimation_tools/ReadMe/#output","title":"Output","text":"Name Type Description <code>/estimated_stddev_vx</code> <code>std_msgs::msg::Float64</code> estimated standard deviation of vx <code>/estimated_stddev_angular_velocity</code> <code>geometry_msgs/msg/Vector3</code> estimated standard deviation of angular velocity <code>/estimated_coef_vx</code> <code>std_msgs::msg::Float64</code> coef of vx <code>/estimated_bias_angular_velocity</code> <code>geometry_msgs/msg/Vector3</code> bias of angular velocity"},{"location":"localization/deviation_estimation_tools/ReadMe/#parameters-for-deviation-estimator","title":"Parameters for deviation estimator","text":"Name Type Description Default value show_debug_info bool Flag to display debug info true t_design double Maximum expected duration of dead-reckoning [s] 10.0 x_design double Maximum expected trajectory length of dead-reckoning [m] 30.0 time_window double Estimation period [s] 4.0 results_dir string Text path where the estimated results will be stored \"$(env HOME)\" gyro_estimation.only_use_straight bool Flag to use only straight sections for gyro estimation true gyro_estimation.only_use_moving bool Flag to use only moving sections for gyro estimation true gyro_estimation.only_use_constant_velocity bool Flag to use only constant velocity sections for gyro estimation true velocity_estimation.only_use_straight bool Flag to use only straight sections for velocity estimation true velocity_estimation.only_use_moving bool Flag to use only moving sections for velocity estimation true velocity_estimation.only_use_constant_velocity bool Flag to use only constant velocity sections for velocity estimation true"},{"location":"localization/deviation_estimation_tools/ReadMe/#functions","title":"Functions","text":""},{"location":"localization/deviation_estimation_tools/ReadMe/#bias-estimation","title":"Bias estimation","text":"<p>By assuming that the pose information is a ground truth, the node estimates the bias of velocity and yaw rate.</p>"},{"location":"localization/deviation_estimation_tools/ReadMe/#standard-deviation-estimation","title":"Standard deviation estimation","text":"<p>The node also estimates the standard deviation of velocity and yaw rate. This can be used as a parameter in <code>ekf_localizer</code>. Note that the final estimation takes into account the bias.</p>"},{"location":"localization/deviation_estimation_tools/ReadMe/#3-description-of-deviation-evaluator","title":"3. Description of Deviation Evaluator","text":"<p>You can use <code>deviation_evaluator</code> for evaluating the estimated standard deviation parameters. This can be run with the following command:</p> <pre><code>ros2 launch deviation_evaluator deviation_evaluator.launch.xml map_path:=MAP_PATH rviz:=true in_imu:=YOUR_IMU_TOPIC_NAME in_wheel_odometry:=YOUR_VELOCITY_TOPIC_NAME\nros2 bag play YOUR_BAG\n</code></pre> <p>All the ros2bag and config files will be stored in <code>$HOME/deviation_evaluator_sample</code> (you can change this with <code>save_dir</code> parameter in the launch file).</p>"},{"location":"localization/deviation_estimation_tools/ReadMe/#features","title":"Features","text":""},{"location":"localization/deviation_estimation_tools/ReadMe/#a-visualization-of-confidence-ellipse","title":"A. Visualization of confidence ellipse","text":"<p><code>deviation_evaluator</code> supports rviz visualization. To use this feature, set <code>rviz:=true</code> and <code>map_path:=/path/to/map_folder</code>.</p> <p> </p>"},{"location":"localization/deviation_estimation_tools/ReadMe/#b-check-the-compatibility-with-a-threshold-in-localization_error_monitor","title":"B. Check the compatibility with a threshold in <code>localization_error_monitor</code>","text":"<p>The <code>deviation_evaluator</code> also checks the compatibility of the estimated parameters and the threshold in <code>localization_error_monitor</code>.</p> <p>Concretely, it checks if the two following statement holds:</p> <ol> <li><code>localization_error_monitor</code> would NOT diagnose the system as <code>WARN</code> nor <code>ERROR</code> as long as the NDT is available.</li> <li><code>localization_error_monitor</code> detects the anomaly with a recall over 0.99.</li> </ol> <p>Given the result of this validation, the users can verify that the estimated parameters in <code>deviation_estimator</code> can be safely applied to Autoware.</p> <p>Here, note that the <code>localization_error_monitor</code> treat the system as an anomaly if either of error along long-axis of confidence ellipse or error along lateral direction is over threshold. Please refer to the package in autoware.universe for detail.</p>"},{"location":"localization/deviation_estimation_tools/ReadMe/#architecture-of-deviation_evaluator","title":"Architecture of <code>deviation_evaluator</code>","text":"<p>The architecture of <code>deviation_evaluator</code> is shown below. It launches two <code>ekf_localizer</code>, one for ground truth estimation and one for (partially) dead reckoning estimation. Outputs of both <code>ekf_localizer</code> will be recorded and analyzed with <code>deviation_evaluation_visualizer</code>.</p> <p> </p>"},{"location":"localization/deviation_estimation_tools/ReadMe/#inputs-outputs_1","title":"Inputs / Outputs","text":""},{"location":"localization/deviation_estimation_tools/ReadMe/#input_1","title":"Input","text":"Name Type Description <code>in_ndt_pose_with_covariance</code> <code>geometry_msgs::msg::PoseWithCovarianceStamped</code> Input pose <code>in_ekf_dr_odom</code> <code>nav_msgs::msg::Odometry</code> dead-reckoning EKF outputs <code>in_ekf_gt_odom</code> <code>nav_msgs::msg::Odometry</code> ground-truth EKF outputs"},{"location":"localization/deviation_estimation_tools/ReadMe/#output_1","title":"Output","text":"Name Type Description <code>out_pose_with_covariance_dr</code> <code>geometry_msgs::msg::PoseWithCovarianceStamped</code> Output pose (for dead reckoning <code>ekf_localizer</code>) <code>out_pose_with_covariance_gt</code> <code>geometry_msgs::msg::PoseWithCovarianceStamped</code> Output pose (for ground truth <code>ekf_localizer</code>) <code>out_initial_pose_with_covariance</code> <code>geometry_msgs::msg::PoseWithCovarianceStamped</code> Output initial pose (for both <code>ekf_localizer</code>)"},{"location":"localization/deviation_estimation_tools/ReadMe/#parameters-for-deviation-evaluator","title":"Parameters for deviation evaluator","text":"Name Type Description Default value rviz bool Show rviz if true false map_path string Path to the directory where map data (OpenStreetMap or .osm data) is saved \"\" save_dir string Output directory where figures, parameter files, and scores are saved \"$(env HOME)/deviation_evaluator_sample\" period double [s] Duration of cycle 10 (in <code>config/deviation_evaluator.yaml</code>) cut double [s] Duration of ndt-cut-off 9 (in <code>config/deviation_evaluator.yaml</code>)"},{"location":"localization/deviation_estimation_tools/ReadMe/#4-reflect-the-estimated-parameters-in-autoware","title":"4. Reflect the estimated parameters in Autoware","text":"<p>The results of <code>deviation_estimator</code> is stored in two scripts:</p> <ul> <li><code>imu_corrector</code> param file (default: <code>$HOME/imu_corrector.param.yaml</code>)</li> <li><code>vehicle_velocity_converter</code> param file (default: <code>$HOME/vehicle_velocity_converter.param.yaml</code>)</li> </ul> <p>Please modify your Autoware configuration so that it will launch using the above two parameter files.</p>"},{"location":"localization/deviation_estimation_tools/ReadMe/#5-known-issues","title":"5. Known issues","text":"<ul> <li>The plot of <code>deviation_evaluator.png</code> generated by <code>deviation_evaluation_visualizer</code> may diverge, possibly due to the large covariance caused by a failure in localization.</li> <li><code>ekf_localizer</code> in <code>deviation_evaluator</code> may not start properly. As for now, please launch <code>deviation_evaluator</code> first and then run <code>ros2 bag play</code> to provide pose and twist data.</li> </ul>"},{"location":"map/autoware_lanelet2_map_utils/","title":"autoware_lanelet2_map_utils","text":""},{"location":"map/autoware_lanelet2_map_utils/#autoware_lanelet2_map_utils","title":"autoware_lanelet2_map_utils","text":"<p>This package is for preprocessing the lanelet map.</p>"},{"location":"map/autoware_pointcloud_divider/","title":"autoware_pointcloud_divider","text":""},{"location":"map/autoware_pointcloud_divider/#autoware_pointcloud_divider","title":"autoware_pointcloud_divider","text":"<p>This is a tool for processing pcd files, and it can perform the following functions:</p> <ul> <li>Dividing point clouds</li> <li>Downsampling point clouds</li> <li>Generating metadata to efficiently handle the divided point clouds</li> </ul>"},{"location":"map/autoware_pointcloud_divider/#supported-data-format","title":"Supported Data Format","text":"<p>Currently, only <code>pcl::PointXYZ</code> and <code>pcl::PointXYZI</code> are supported. Any PCD will be loaded as those two types.</p> <p>This tool can be used with files that have data fields other than <code>XYZI</code> (e.g., <code>XYZRGB</code>) and files that only contain <code>XYZ</code>.</p> <ul> <li>Data fields other than <code>XYZI</code> are ignored during loading.</li> <li>When loading <code>XYZ</code>-only data, the <code>intensity</code> field is assigned 0.</li> </ul>"},{"location":"map/autoware_pointcloud_divider/#installation","title":"Installation","text":"<pre><code>cd &lt;PATH_TO_pilot-auto.*&gt; # OR &lt;PATH_TO_autoware&gt;\ncd src/\ngit clone git@github.com:autowarefoundation/autoware_tools.git\ncd ..\ncolcon build --cmake-args -DCMAKE_BUILD_TYPE=Release --catkin-skip-building-tests --symlink-install --packages-up-to autoware_pointcloud_divider\n</code></pre>"},{"location":"map/autoware_pointcloud_divider/#usage","title":"Usage","text":"<ul> <li> <p>Select directory, process all files found with <code>find $INPUT_DIR -name \"*.pcd\"</code>.</p> <pre><code>ros2 launch autoware_pointcloud_divider pointcloud_divider.launch.xml input_pcd_or_dir:=&lt;INPUT_DIR&gt; output_pcd_dir:=&lt;OUTPUT_DIR&gt; prefix:=&lt;PREFIX&gt;\n</code></pre> Name Description INPUT_DIR Directory that contains all PCD files OUTPUT_DIR Output directory name PREFIX Prefix of output PCD file name </li> </ul> <p><code>INPUT_DIR</code> and <code>OUTPUT_DIR</code> should be specified as absolute paths.</p> <p>NOTE: The folder <code>OUTPUT_DIR</code> is auto generated. If it already exists, all files within that folder will be deleted before the tool runs. Hence, users should backup the important files in that folder if necessary.</p>"},{"location":"map/autoware_pointcloud_divider/#parameters","title":"Parameters","text":"Name Type Description Default Range use_large_grid boolean Pack small segments to larger folders false N/A leaf_size float Resolution in meter for downsampling the output segments. Setting to negative to get the raw output PCDs. 0.2 N/A grid_size_x float The x size in meter of the output segments 20 N/A grid_size_y float The y size in meter of the output segments 20 N/A input_pcd_or_dir string The path to the folder containing the input PCD files N/A output_pcd_dir string The path to the folder containing the output PCD files N/A prefix string The prefix for the name of the output PCD files N/A point_type string Type of the point when processing PCD files. Could be point_xyz or point_xyzi point_xyzi N/A <p>How the point cloud is processed.</p> <p></p> <p>How the PCD file is named</p> <p></p>"},{"location":"map/autoware_pointcloud_divider/#parameter-example","title":"Parameter example","text":"<ol> <li> <p>Dividing point clouds without downsampling</p> <pre><code>use_large_grid: false\nleaf_size: -1.0 # any negative number\ngrid_size_x: 20\ngrid_size_y: 20\n</code></pre> </li> <li> <p>Dividing and downsampling point clouds</p> <pre><code>use_large_grid: false\nleaf_size: 0.2\ngrid_size_x: 20\ngrid_size_y: 20\n</code></pre> </li> </ol>"},{"location":"map/autoware_pointcloud_divider/#metadata-yaml-format","title":"Metadata YAML Format","text":"<p>The metadata file should be named <code>metadata.yaml</code>. It contains the following fields:</p> <ul> <li><code>x_resolution</code>: The resolution along the X-axis.</li> <li><code>y_resolution</code>: The resolution along the Y-axis.</li> </ul> <p>Additionally, the file contains entries for individual point cloud files (<code>.pcd</code> files) and their corresponding grid coordinates. The key is the file name, and the value is a list containing the X and Y coordinates of the lower-left corner of the grid cell associated with that file. The grid cell's boundaries can be calculated using the <code>x_resolution</code> and <code>y_resolution</code> values.</p> <p>For example:</p> <pre><code>x_resolution: 100.0\ny_resolution: 150.0\nA.pcd: [1200, 2500] # -&gt; 1200 &lt;= x &lt;= 1300, 2500 &lt;= y &lt;= 2650\nB.pcd: [1300, 2500] # -&gt; 1300 &lt;= x &lt;= 1400, 2500 &lt;= y &lt;= 2650\nC.pcd: [1200, 2650] # -&gt; 1200 &lt;= x &lt;= 1300, 2650 &lt;= y &lt;= 2800\nD.pcd: [1400, 2650] # -&gt; 1400 &lt;= x &lt;= 1500, 2650 &lt;= y &lt;= 2800\n</code></pre>"},{"location":"map/autoware_pointcloud_divider/#license","title":"LICENSE","text":"<p>Parts of files grid_info.hpp, pcd_divider.hpp, and pcd_divider.cpp are copied from MapIV's pointcloud_divider and are under BSD-3-Clauses license. The remaining code are under Apache License 2.0</p>"},{"location":"map/autoware_pointcloud_merger/","title":"autoware_pointcloud_merger","text":""},{"location":"map/autoware_pointcloud_merger/#autoware_pointcloud_merger","title":"autoware_pointcloud_merger","text":"<p>This is a tool for processing pcd files, and it can perform the following functions:</p> <ul> <li>Merging multiple PCD files to a single PCD file</li> <li>Downsampling point clouds</li> </ul>"},{"location":"map/autoware_pointcloud_merger/#supported-data-format","title":"Supported Data Format","text":"<p>Currently, only <code>pcl::PointXYZ</code> and <code>pcl::PointXYZI</code> are supported. Any PCD will be loaded as those two types .</p> <p>This tool can be used with files that have data fields other than <code>XYZI</code> (e.g., <code>XYZRGB</code>) and files that only contain <code>XYZ</code>.</p> <ul> <li>Data fields other than <code>XYZI</code> are ignored during loading.</li> <li>When loading <code>XYZ</code>-only data, the <code>intensity</code> field is assigned 0.</li> </ul>"},{"location":"map/autoware_pointcloud_merger/#installation","title":"Installation","text":"<pre><code>cd &lt;PATH_TO_pilot-auto.*&gt; # OR &lt;PATH_TO_autoware&gt;\ncd src/\ngit clone git@github.com:autowarefoundation/autoware_tools.git\ncd ..\ncolcon build --cmake-args -DCMAKE_BUILD_TYPE=Release --catkin-skip-building-tests --symlink-install --packages-up-to autoware_pointcloud_merger\n</code></pre>"},{"location":"map/autoware_pointcloud_merger/#usage","title":"Usage","text":"<ul> <li> <p>Merger all PCD files from the input directory into a single output PCD</p> <pre><code>ros2 launch autoware_pointcloud_merger pointcloud_merger.launch.xml input_pcd_dir:=&lt;INPUT_DIR&gt; output_pcd:=&lt;OUTPUT_PCD&gt;\n</code></pre> Name Description INPUT_DIR Directory that contains all input PCD files OUTPUT_PCD Name of the output PCD file </li> </ul> <p><code>INPUT_DIR</code> and <code>OUTPUT_PCD</code> should be specified as absolute paths.</p>"},{"location":"map/autoware_pointcloud_merger/#parameter","title":"Parameter","text":"Name Type Description Default Range leaf_size float Resolution in meter for downsampling the output PCD. Setting to negative to get the raw output PCD. -0.1 N/A input_pcd_dir string The path to the folder containing the input PCD files N/A output_pcd string The path to the merged PCD file N/A point_type string Type of the point when processing PCD files. Could be point_xyz or point_xyzi point_xyzi N/A"},{"location":"map/autoware_pointcloud_merger/#license","title":"LICENSE","text":"<p>Parts of files pcd_merger.hpp, and pcd_merger.cpp are copied from MapIV's pointcloud_divider and are under BSD-3-Clauses license. The remaining code are under Apache License 2.0</p>"},{"location":"planning/autoware_planning_data_analyzer/","title":"Planning Data Analyzer","text":""},{"location":"planning/autoware_planning_data_analyzer/#planning-data-analyzer","title":"Planning Data Analyzer","text":""},{"location":"planning/autoware_planning_data_analyzer/#usage","title":"Usage","text":"<pre><code>ros2 launch autoware_planning_data_analyzer behavior_analyzer.launch.xml bag_path:=&lt;ROSBAG&gt;\n</code></pre>"},{"location":"planning/autoware_planning_data_analyzer/#output","title":"Output","text":"Name Type Description <code>~/output/manual_metrics</code> <code>tier4_debug_msgs::msg::Float32MultiArrayStamped</code> Metrics calculated from the driver's driving trajectory. <code>~/output/system_metrics</code> <code>tier4_debug_msgs::msg::Float32MultiArrayStamped</code> Metrics calculated from the autoware output. <code>~/output/manual_score</code> <code>tier4_debug_msgs::msg::Float32MultiArrayStamped</code> Driving scores calculated from the driver's driving trajectory. <code>~/output/system_score</code> <code>tier4_debug_msgs::msg::Float32MultiArrayStamped</code> Driving scores calculated from the autoware output."},{"location":"planning/autoware_route_client/","title":"Route Client","text":""},{"location":"planning/autoware_route_client/#route-client","title":"Route Client","text":"<p>This package contains a tool to send request to set route.</p>"},{"location":"planning/autoware_route_client/#usage","title":"Usage","text":""},{"location":"planning/autoware_route_client/#prepare-a-route-file","title":"Prepare a route file","text":"<p>Prepare a YAML file containing route information. The file format is like following:</p> <pre><code>goal:\nposition:\nx: 0.0\ny: 0.0\nz: 0.0\norientation:\nx: 0.0\ny: 0.0\nz: 0.0\nw: 0.0\nsegments:\n- preferred:\nid: 0\ntype: lane\nalternatives:\n- id: 1\ntype: lane\n- preferred:\nid: 2\ntype: lane\nalternatives: []\n- preferred:\nid: 3\ntype: lane\nalternatives:\n- id: 4\ntype: lane\n</code></pre>"},{"location":"planning/autoware_route_client/#send-request-to-set-route","title":"Send request to set route","text":"<p>Execute following command.</p> <pre><code>ros2 run autoware_route_client route_client.py &lt;path_to_yaml_file&gt;\n</code></pre>"},{"location":"planning/autoware_rtc_replayer/","title":"rtc_replayer","text":""},{"location":"planning/autoware_rtc_replayer/#rtc_replayer","title":"rtc_replayer","text":""},{"location":"planning/autoware_rtc_replayer/#purpose","title":"Purpose","text":"<p>The current issue for RTC commands is that service is not recorded to rosbag, so it's very hard to analyze what was happened exactly. So this package makes it possible to replay rtc commands service from rosbag rtc status topic to resolve that issue.</p>"},{"location":"planning/autoware_rtc_replayer/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"planning/autoware_rtc_replayer/#input","title":"Input","text":"Name Type Description <code>/debug/rtc_status</code> tier4_rtc_msgs::msg::CooperateStatusArray CooperateStatusArray that is recorded in rosbag"},{"location":"planning/autoware_rtc_replayer/#output","title":"Output","text":"Name Type Description <code>/api/external/set/rtc_commands</code> tier4_rtc_msgs::msg::CooperateCommands CooperateCommands that is replayed by this package"},{"location":"planning/autoware_rtc_replayer/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"planning/autoware_rtc_replayer/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>This package can't replay CooperateCommands correctly if CooperateStatusArray is not stable. And this replay is always later one step than actual however it will not affect much for behavior.</p>"},{"location":"planning/autoware_rtc_replayer/#future-extensions-unimplemented-parts","title":"Future extensions / Unimplemented parts","text":"<p>tbd.</p>"},{"location":"planning/planning_debug_tools/","title":"Planning Debug Tools","text":""},{"location":"planning/planning_debug_tools/#planning-debug-tools","title":"Planning Debug Tools","text":"<p>This package contains several planning-related debug tools.</p> <ul> <li>Trajectory analyzer: visualizes the information (speed, curvature, yaw, etc) along the trajectory</li> <li>Closest velocity checker: prints the velocity information indicated by each modules</li> <li>Perception reproducer: generates detected objects from rosbag data in planning simulator environment</li> <li>processing time checker: displays processing_time of modules on the terminal</li> <li>logging level updater: updates the logging level of the planning modules.</li> </ul>"},{"location":"planning/planning_debug_tools/#trajectory-analyzer","title":"Trajectory analyzer","text":"<p>The <code>trajectory_analyzer</code> visualizes the information (speed, curvature, yaw, etc) along the trajectory. This feature would be helpful for purposes such as \"investigating the reason why the vehicle decelerates here\". This feature employs the OSS PlotJuggler.</p> <p></p>"},{"location":"planning/planning_debug_tools/#stop-reason-visualizer","title":"Stop reason visualizer","text":"<p>This is to visualize stop factor and reason. see the details</p>"},{"location":"planning/planning_debug_tools/#how-to-use","title":"How to use","text":"<p>please launch the analyzer node</p> <pre><code>ros2 launch planning_debug_tools trajectory_analyzer.launch.xml\n</code></pre> <p>and visualize the analyzed data on the plot juggler following below.</p>"},{"location":"planning/planning_debug_tools/#setup-plotjuggler","title":"setup PlotJuggler","text":"<p>For the first time, please add the following code to reactive script and save it as the picture below! (Looking for the way to automatically load the configuration file...)</p> <p>You can customize what you plot by editing this code.</p> <p></p> <p>in Global code</p> <pre><code>behavior_path = '/planning/scenario_planning/lane_driving/behavior_planning/path_with_lane_id/debug_info'\nbehavior_velocity = '/planning/scenario_planning/lane_driving/behavior_planning/path/debug_info'\nmotion_avoid = '/planning/scenario_planning/lane_driving/motion_planning/path_optimizer/trajectory/debug_info'\nmotion_smoother_latacc = '/planning/scenario_planning/motion_velocity_smoother/debug/trajectory_lateral_acc_filtered/debug_info'\nmotion_smoother = '/planning/scenario_planning/trajectory/debug_info'\n</code></pre> <p>in function(tracker_time)</p> <pre><code>PlotCurvatureOverArclength('k_behavior_path', behavior_path, tracker_time)\nPlotCurvatureOverArclength('k_behavior_velocity', behavior_velocity, tracker_time)\nPlotCurvatureOverArclength('k_motion_avoid', motion_avoid, tracker_time)\nPlotCurvatureOverArclength('k_motion_smoother', motion_smoother, tracker_time)\n\nPlotVelocityOverArclength('v_behavior_path', behavior_path, tracker_time)\nPlotVelocityOverArclength('v_behavior_velocity', behavior_velocity, tracker_time)\nPlotVelocityOverArclength('v_motion_avoid', motion_avoid, tracker_time)\nPlotVelocityOverArclength('v_motion_smoother_latacc', motion_smoother_latacc, tracker_time)\nPlotVelocityOverArclength('v_motion_smoother', motion_smoother, tracker_time)\n\nPlotAccelerationOverArclength('a_behavior_path', behavior_path, tracker_time)\nPlotAccelerationOverArclength('a_behavior_velocity', behavior_velocity, tracker_time)\nPlotAccelerationOverArclength('a_motion_avoid', motion_avoid, tracker_time)\nPlotAccelerationOverArclength('a_motion_smoother_latacc', motion_smoother_latacc, tracker_time)\nPlotAccelerationOverArclength('a_motion_smoother', motion_smoother, tracker_time)\n\nPlotYawOverArclength('yaw_behavior_path', behavior_path, tracker_time)\nPlotYawOverArclength('yaw_behavior_velocity', behavior_velocity, tracker_time)\nPlotYawOverArclength('yaw_motion_avoid', motion_avoid, tracker_time)\nPlotYawOverArclength('yaw_motion_smoother_latacc', motion_smoother_latacc, tracker_time)\nPlotYawOverArclength('yaw_motion_smoother', motion_smoother, tracker_time)\n\nPlotCurrentVelocity('localization_kinematic_state', '/localization/kinematic_state', tracker_time)\n</code></pre> <p>in Function Library </p> <pre><code>function PlotValue(name, path, timestamp, value)\n  new_series = ScatterXY.new(name)\n  index = 0\n  while(true) do\n    series_k = TimeseriesView.find( string.format( \"%s/\"..value..\"[%d]\", path, index) )\n    series_s = TimeseriesView.find( string.format( \"%s/arclength[%d]\", path, index) )\n    series_size = TimeseriesView.find( string.format( \"%s/size\", path) )\n\n    if series_k == nil or series_s == nil then break end\n\n    k = series_k:atTime(timestamp)\n    s = series_s:atTime(timestamp)\n    size = series_size:atTime(timestamp)\n\n    if index &gt;= size then break end\n\n    new_series:push_back(s,k)\n    index = index+1\n  end\nend\n\nfunction PlotCurvatureOverArclength(name, path, timestamp)\n  PlotValue(name, path, timestamp,\"curvature\")\nend\n\nfunction PlotVelocityOverArclength(name, path, timestamp)\n  PlotValue(name, path, timestamp,\"velocity\")\nend\n\nfunction PlotAccelerationOverArclength(name, path, timestamp)\n  PlotValue(name, path, timestamp,\"acceleration\")\nend\n\nfunction PlotYawOverArclength(name, path, timestamp)\n  PlotValue(name, path, timestamp,\"yaw\")\nend\n\nfunction PlotCurrentVelocity(name, kinematics_name, timestamp)\n  new_series = ScatterXY.new(name)\n  series_v = TimeseriesView.find( string.format( \"%s/twist/twist/linear/x\", kinematics_name))\n  if series_v == nil then\n    print(\"error\")\n    return\n  end\n  v = series_v:atTime(timestamp)\n  new_series:push_back(0.0, v)\nend\n</code></pre> <p>Then, run the plot juggler.</p>"},{"location":"planning/planning_debug_tools/#how-to-customize-the-plot","title":"How to customize the plot","text":"<p>Add Path/PathWithLaneIds/Trajectory topics you want to plot in the <code>trajectory_analyzer.launch.xml</code>, then the analyzed topics for these messages will be published with <code>TrajectoryDebugINfo.msg</code> type. You can then visualize these data by editing the reactive script on the PlotJuggler.</p>"},{"location":"planning/planning_debug_tools/#requirements","title":"Requirements","text":"<p>The version of the plotJuggler must be &gt; <code>3.5.0</code></p>"},{"location":"planning/planning_debug_tools/#closest-velocity-checker","title":"Closest velocity checker","text":"<p>This node prints the velocity information indicated by planning/control modules on a terminal. For trajectories calculated by planning modules, the target velocity on the trajectory point which is closest to the ego vehicle is printed. For control commands calculated by control modules, the target velocity and acceleration is directly printed. This feature would be helpful for purposes such as \"investigating the reason why the vehicle does not move\".</p> <p>You can launch by</p> <pre><code>ros2 run planning_debug_tools closest_velocity_checker.py\n</code></pre> <p></p>"},{"location":"planning/planning_debug_tools/#trajectory-visualizer","title":"Trajectory visualizer","text":"<p>The old version of the trajectory analyzer. It is written in Python and more flexible, but very slow.</p>"},{"location":"planning/planning_debug_tools/#for-other-use-case-experimental","title":"For other use case (experimental)","text":"<p>To see behavior velocity planner's internal plath with lane id add below example value to behavior velocity analyzer and set <code>is_publish_debug_path: true</code></p> <pre><code>crosswalk ='/planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/debug/path_with_lane_id/crosswalk/debug_info'\nintersection ='/planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/debug/path_with_lane_id/intersection/debug_info'\ntraffic_light ='/planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/debug/path_with_lane_id/traffic_light/debug_info'\nmerge_from_private ='/planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/debug/path_with_lane_id/merge_from_private/debug_info'\nocclusion_spot ='/planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/debug/path_with_lane_id/occlusion_spot/debug_info'\n</code></pre> <pre><code>PlotVelocityOverArclength('v_crosswalk', crosswalk, tracker_time)\nPlotVelocityOverArclength('v_intersection', intersection, tracker_time)\nPlotVelocityOverArclength('v_merge_from_private', merge_from_private, tracker_time)\nPlotVelocityOverArclength('v_traffic_light', traffic_light, tracker_time)\nPlotVelocityOverArclength('v_occlusion', occlusion_spot, tracker_time)\n\nPlotYawOverArclength('yaw_crosswalk', crosswalk, tracker_time)\nPlotYawOverArclength('yaw_intersection', intersection, tracker_time)\nPlotYawOverArclength('yaw_merge_from_private', merge_from_private, tracker_time)\nPlotYawOverArclength('yaw_traffic_light', traffic_light, tracker_time)\nPlotYawOverArclength('yaw_occlusion', occlusion_spot, tracker_time)\n\nPlotCurrentVelocity('localization_kinematic_state', '/localization/kinematic_state', tracker_time)\n</code></pre>"},{"location":"planning/planning_debug_tools/#perception-reproducer","title":"Perception reproducer","text":"<p>This script can overlay the perception results from the rosbag on the planning simulator synchronized with the simulator's ego pose.</p>"},{"location":"planning/planning_debug_tools/#how-it-works","title":"How it works","text":"<p>Whenever the ego's position changes, a chronological <code>reproduce_sequence</code> queue is generated base on its position with a search radius (default to 2 m). If the queue is empty, the nearest odom message in the rosbag is added to the queue. When publishing perception messages, the first element in the <code>reproduce_sequence</code> is popped and published.</p> <p>This design results in the following behavior:</p> <ul> <li>When ego stops, the perception messages are published in chronological order until queue is empty.</li> <li>When the ego moves, a perception message close to ego's position is published.</li> </ul>"},{"location":"planning/planning_debug_tools/#how-to-use_1","title":"How to use","text":"<p>First, launch the planning simulator, and put the ego pose. Then, run the script according to the following command.</p> <p>By designating a rosbag, perception reproducer can be launched.</p> <pre><code>ros2 run planning_debug_tools perception_reproducer.py -b &lt;bag-file&gt;\n</code></pre> <p>You can designate multiple rosbags in the directory.</p> <pre><code>ros2 run planning_debug_tools perception_reproducer.py -b &lt;dir-to-bag-files&gt;\n</code></pre> <p>Instead of publishing predicted objects, you can publish detected/tracked objects by designating <code>-d</code> or <code>-t</code>, respectively.</p> <p>You can use <code>-r</code> option to set the search radius in meters for the perception messages. If it is set to 0, the reproducer always publishes the nearest perception message as how did the old perception_reproducer work. <code>-c</code>(<code>--reproduce-cool-down</code>) option is to set the cool down time in seconds, aiming to prevent republishing recently published messages.</p>"},{"location":"planning/planning_debug_tools/#perception-replayer","title":"Perception replayer","text":"<p>A part of the feature is under development.</p> <p>This script can overlay the perception results from the rosbag on the planning simulator.</p> <p>In detail, this script publishes the data at a certain timestamp from the rosbag. The timestamp will increase according to the real time without any operation. By using the GUI, you can modify the timestamp by pausing, changing the rate or going back into the past.</p>"},{"location":"planning/planning_debug_tools/#how-to-use_2","title":"How to use","text":"<p>First, launch the planning simulator, and put the ego pose. Then, run the script according to the following command.</p> <p>By designating a rosbag, perception replayer can be launched. The GUI is launched as well with which a timestamp of rosbag can be managed.</p> <pre><code>ros2 run planning_debug_tools perception_replayer.py -b &lt;bag-file&gt;\n</code></pre> <p>You can designate multiple rosbags in the directory.</p> <pre><code>ros2 run planning_debug_tools perception_replayer.py -b &lt;dir-to-bag-files&gt;\n</code></pre> <p>Instead of publishing predicted objects, you can publish detected/tracked objects by designating <code>-d</code> or <code>-t</code>, respectively.</p>"},{"location":"planning/planning_debug_tools/#processing-time-checker","title":"Processing time checker","text":"<p>The purpose of the Processing Time Subscriber is to monitor and visualize the processing times of various ROS 2 topics in a system. By providing a real-time terminal-based visualization, users can easily confirm the processing time performance as in the picture below.</p> <p></p> <p>You can run the program by the following command.</p> <pre><code>ros2 run planning_debug_tools processing_time_checker.py -f &lt;update-hz&gt; -m &lt;max-bar-time&gt;\n</code></pre> <p>This program subscribes to ROS 2 topics that have a suffix of <code>processing_time_ms</code>.</p> <p>The program allows users to customize two parameters via command-line arguments:</p> <ul> <li>--max_display_time (or -m): This sets the maximum display time in milliseconds. The default value is 150ms.</li> <li>--display_frequency (or -f): This sets the frequency at which the terminal UI updates. The default value is 5Hz.</li> </ul> <p>By adjusting these parameters, users can tailor the display to their specific monitoring needs.</p>"},{"location":"planning/planning_debug_tools/#logging-level-updater","title":"Logging Level Updater","text":"<p>The purpose of the Logging Level Updater is to update the logging level of the planning modules via ROS 2 service. Users can easily update the logging level for debugging.</p> <pre><code>ros2 run planning_debug_tools update_logger_level.sh &lt;module-name&gt; &lt;logger-level&gt;\n</code></pre> <p><code>&lt;logger-level&gt;</code> will be <code>DEBUG</code>, <code>INFO</code>, <code>WARN</code>, or <code>ERROR</code>.</p> <p></p> <p>When you have a typo of the planning module, the script will show the available modules.</p> <p></p>"},{"location":"planning/planning_debug_tools/doc-stop-reason-visualizer/","title":"Doc stop reason visualizer","text":""},{"location":"planning/planning_debug_tools/doc-stop-reason-visualizer/#stop_reason_visualizer","title":"stop_reason_visualizer","text":"<p>This module is to visualize stop factor quickly without selecting correct debug markers. This is supposed to use with virtual wall marker like below. </p>"},{"location":"planning/planning_debug_tools/doc-stop-reason-visualizer/#how-to-use","title":"How to use","text":"<p>Run this node.</p> <pre><code>ros2 run planning_debug_tools stop_reason_visualizer_exe\n</code></pre> <p>Add stop reason debug marker from rviz.</p> <p></p> <p>Note: ros2 process can be sometimes deleted only from <code>killall stop_reason_visualizer_exe</code></p> <p>Reference</p>"},{"location":"simulator/simulator_compatibility_test/","title":"simulator_compatibility_test","text":""},{"location":"simulator/simulator_compatibility_test/#simulator_compatibility_test","title":"simulator_compatibility_test","text":""},{"location":"simulator/simulator_compatibility_test/#purpose","title":"Purpose","text":"<p>Test procedures (e.g. test codes) to check whether a certain simulator is compatible with Autoware</p>"},{"location":"simulator/simulator_compatibility_test/#overview-of-the-test-codes","title":"Overview of the test codes","text":"<p>File structure</p> <ul> <li>test_base</li> <li>test_sim_common_manual_testing</li> <li>test_morai_sim</li> </ul> <ol> <li>test_base provides shared methods for testing. Other test codes are created based on functions defined here.</li> <li>test_sim_common_manual_testing provides the most basic functions. Any simulator can be tested using codes here. However, to make these codes usable with any simulators, the codes do not include any features for test automation.</li> <li>test_morai_sim is an automated version of test_sim_common_manual_testing for MORAI SIM: Drive. Thus it includes 'MORAI SIM: Drive'-specific codes. Users of the other simulators may create similar version for their simulator of interest.</li> </ol>"},{"location":"simulator/simulator_compatibility_test/#test-procedures-for-test_sim_common_manual_testing","title":"Test Procedures for test_sim_common_manual_testing","text":""},{"location":"simulator/simulator_compatibility_test/#build-process-before-test","title":"Build process before test","text":"<pre><code>source install/setup.bash\ncolcon build --packages-select simulator_compatibility_test\ncd src/universe/autoware.universe/tools/simulator_test/simulator_compatibility_test/test_sim_common_manual_testing\n</code></pre> <p>To run each test case manually</p>"},{"location":"simulator/simulator_compatibility_test/#test-case-1","title":"Test Case #1","text":"<ol> <li>Run your simulator</li> <li>Load a map and an ego vehicle for the test</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_01_control_mode_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle control mode is changed into Manual (If the simulator has a GUI for this one, it should display the ego is in Manual)</li> <li>Ego vehicle control mode is changed into Auto (If the simulator has a GUI for this one, it should display the ego is in Auto)</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"simulator/simulator_compatibility_test/#test-case-2","title":"Test Case #2","text":"<ol> <li>Run your simulator (If the simulator is already running, skip this part)</li> <li>Load a map and an ego vehicle for the test (If a map and an ego are loaded already, skip this part)</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_02_change_gear_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle gear mode is changed into \"P\" (If the simulator has a GUI for this one, it should display the gear mode is in \"P\")</li> <li>Ego vehicle gear mode is changed into \"N\" (If the simulator has a GUI for this one, it should display the gear mode is in \"N\")</li> <li>Ego vehicle gear mode is changed into \"R\" (If the simulator has a GUI for this one, it should display the gear mode is in \"R\")</li> <li>Ego vehicle gear mode is changed into \"D\" (If the simulator has a GUI for this one, it should display the gear mode is in \"D\")</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"simulator/simulator_compatibility_test/#test-case-3","title":"Test Case #3","text":"<ol> <li>Run your simulator (If the simulator is already running, skip this part)</li> <li>Load a map and an ego vehicle for the test (If a map and an ego are loaded already, skip this part)</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_03_longitudinal_command_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle longitudinal velocity is greater than 10 kph (If the simulator has a GUI for this one, it should display the longitudinal velocity is greater than 10 kph)</li> <li>Ego vehicle longitudinal velocity is going below 10 kph. This is an ego vehicle initialize process to ensure the following acceleration is made by longitudinal.acceleration value (If the simulator has a GUI for this one, it should display the longitudinal velocity is less than 10 kph)</li> <li>Ego vehicle longitudinal velocity is greater than 10 kph (If the simulator has a GUI for this one, it should display the longitudinal velocity is greater than 10 kph)</li> <li>Ego vehicle longitudinal velocity is going below 10 kph. This is an ego vehicle reset process to tear down this test case.</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"simulator/simulator_compatibility_test/#test-case-4","title":"Test Case #4","text":"<ol> <li>Run your simulator (If the simulator is already running, skip this part)</li> <li>Load a map and an ego vehicle for the test (If a map and an ego are loaded already, skip this part)</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_04_lateral_command_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle steering and/or tire value is greater than 0 degree (If the simulator has a GUI for this one, it should display the steering and/or tire is greater than 0 degree)</li> <li>Ego vehicle steering and/or tire value is 0 degree. This is a reset process. (If the simulator has a GUI for this one, it should display the steering and/or tire is 0 degree)</li> <li>Ego vehicle steering and/or tire value is less than 0 degree (If the simulator has a GUI for this one, it should display the steering and/or tire is less than 0 degree)</li> <li>Ego vehicle steering and/or tire value is 0 degree. This is a reset process. (If the simulator has a GUI for this one, it should display the steering and/or tire is 0 degree)</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"simulator/simulator_compatibility_test/#test-case-5","title":"Test Case #5","text":"<ol> <li>Run your simulator (If the simulator is already running, skip this part)</li> <li>Load a map and an ego vehicle for the test (If a map and an ego are loaded already, skip this part)</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_05_turn_indicators_cmd_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle left turn indicator is turned on (If the simulator has a GUI for this one, it should display the left turn indicator is turned on)</li> <li>Ego vehicle right turn indicator is turned on (If the simulator has a GUI for this one, it should display the right turn indicator is turned on)</li> <li>Ego vehicle both turn indicators are turned off. This is a reset process. (If the simulator has a GUI for this one, it should display both left and right turn indicators are turned off)</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"simulator/simulator_compatibility_test/#test-case-6","title":"Test Case #6","text":"<ol> <li>Run your simulator (If the simulator is already running, skip this part)</li> <li>Load a map and an ego vehicle for the test (If a map and an ego are loaded already, skip this part)</li> <li> <p>Run the test using the following command</p> <pre><code>python -m pytest test_06_hazard_lights_cmd_and_report.py\n</code></pre> </li> <li> <p>Check if expected behavior is created within the simulator</p> <ul> <li>Ego vehicle hazard lights are turned on (If the simulator has a GUI for this one, it should display the hazard lights are turned on or blinking)</li> <li>Ego vehicle hazard lights are turned off. This is a reset process. (If the simulator has a GUI for this one, it should display the hazard lights are turned off)</li> </ul> </li> <li>Check if pytest output is passed or failure</li> </ol>"},{"location":"simulator/simulator_compatibility_test/#test-procedures-for-test_morai_sim","title":"Test Procedures for test_morai_sim","text":""},{"location":"simulator/simulator_compatibility_test/#build-process-before-test_1","title":"Build process before test","text":"<pre><code>source install/setup.bash\ncolcon build --packages-select simulator_compatibility_test\ncd src/universe/autoware.universe/tools/simulator_test/simulator_compatibility_test/test_morai_sim\n</code></pre> <p>Detailed process</p> <p>(WIP)</p>"},{"location":"simulator/simulator_compatibility_test/#inner-workings-algorithms","title":"Inner-workings / Algorithms","text":""},{"location":"simulator/simulator_compatibility_test/#inputs-outputs","title":"Inputs / Outputs","text":""},{"location":"simulator/simulator_compatibility_test/#input","title":"Input","text":"Name Type Description <code>/vehicle/status/control_mode</code> <code>autoware_vehicle_msgs::msg::ControlModeReport</code> for [Test Case #1] <code>/vehicle/status/gear_status</code> <code>autoware_vehicle_msgs::msg::GearReport</code> for [Test Case #2] <code>/vehicle/status/velocity_status</code> <code>autoware_vehicle_msgs::msg::VelocityReport</code> for [Test Case #3] <code>/vehicle/status/steering_status</code> <code>autoware_vehicle_msgs::msg::SteeringReport</code> for [Test Case #4] <code>/vehicle/status/turn_indicators_status</code> <code>autoware_vehicle_msgs::msg::TurnIndicatorsReport</code> for [Test Case #5] <code>/vehicle/status/hazard_lights_status</code> <code>autoware_vehicle_msgs::msg::HazardLightsReport</code> for [Test Case #6]"},{"location":"simulator/simulator_compatibility_test/#output","title":"Output","text":"Name Type Description <code>/control/command/control_cmd</code> <code>autoware_control_msgs/Control</code> for [Test Case #3, #4] <code>/control/command/control_mode_cmd</code> <code>autoware_vehicle_msgs/ControlModeCommand</code> for [Test Case #1] <code>/control/command/gear_cmd</code> <code>autoware_vehicle_msgs/GearCommand</code> for [Test Case #2] <code>/vehicle/status/steering_status</code> <code>autoware_vehicle_msgs/TurnIndicatorsCommand</code> for [Test Case #5] <code>/control/command/turn_indicators_cmd</code> <code>autoware_vehicle_msgs/HazardLightsCommand</code> for [Test Case #6]"},{"location":"simulator/simulator_compatibility_test/#parameters","title":"Parameters","text":"<p>None.</p>"},{"location":"simulator/simulator_compatibility_test/#node-parameters","title":"Node Parameters","text":"<p>None.</p>"},{"location":"simulator/simulator_compatibility_test/#core-parameters","title":"Core Parameters","text":"<p>None.</p>"},{"location":"simulator/simulator_compatibility_test/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>None.</p>"},{"location":"system/rqt_diagnostic_graph_monitor/","title":"System diagnostic monitor","text":""},{"location":"vehicle/calibration_adapter/","title":"calibration_adapter","text":""},{"location":"vehicle/calibration_adapter/#calibration_adapter","title":"calibration_adapter","text":""},{"location":"vehicle/calibration_adapter/#purpose","title":"Purpose","text":"<p>This package relay topic to <code>Float32Stamped</code> type of \"autoware_calibration_msgs\" to generalize calibration topics.</p>"},{"location":"vehicle/calibration_adapter/#details","title":"Details","text":"<ul> <li><code>calibration_adapter_node_base</code>   This node has general calibration topics for all vehicle interface</li> </ul> <ul> <li><code>calibration_adapter</code>   This node has vehicle specific or temporary topics to calibrate and this node inherit <code>calibration_adapter_node_base</code>.</li> </ul>"},{"location":"vehicle/calibration_adapter/#assumptions-known-limits","title":"Assumptions / Known limits","text":"<p>TBD.</p>"},{"location":"vehicle/parameter_estimator/","title":"ParameterEstimation","text":""},{"location":"vehicle/parameter_estimator/#parameterestimation","title":"ParameterEstimation","text":"<p>This parameter estimation node estimates a default parameters from inputs for steer offset,wheel base and gear ratio.</p> <p> </p>"},{"location":"vehicle/parameter_estimator/#io","title":"I/O","text":""},{"location":"vehicle/parameter_estimator/#input","title":"input","text":"<p>The following topics are used to estimate the parameters.</p> <ul> <li><code>/sensing/imu/imu_data</code>: used as vehicle angular velocity</li> <li><code>/vehicle/status/twist</code>: used as vehicle velocity</li> <li><code>/vehicle/status/steering</code>: used as vehicle steering angle (Only used in Steer Offset Estimator &amp; Wheel Base Estimator)</li> <li><code>/calibration/vehicle/handle_status</code>: used as vehicle handle angle (Only used in Gear Estimator)</li> <li><code>/vehicle/engage</code>: used to check the driving operation status</li> </ul>"},{"location":"vehicle/parameter_estimator/#output","title":"output","text":"<p>The following topics are the output</p> <ul> <li><code>/vehicle/status/gear_ratio</code></li> <li><code>/vehicle/status/steering_offset</code></li> <li><code>/vehicle/status/wheel_base</code></li> </ul> <p>For users, the <code>EstimationResult.msg</code> output contains the following items:</p> <ul> <li>result: Estimated result.</li> <li>result_mean: Average value of result.</li> <li>result_stddev: Standard deviation value of the estimated parameter</li> <li>absolute_error: Absolute error of the estimated parameters</li> <li>mean_absolute_error: Mean absolute error of the estimated parameters</li> <li>stddev_absolute_error: Standard Deviation of absolute error of the estimated parameters</li> </ul>"},{"location":"vehicle/parameter_estimator/#these-values-can-be-confirmed-in-plot_juggler","title":"These values can be confirmed in plot_juggler","text":"<ul> <li>To display in the plot juggler, you need to drag the result into the table, currently plot juggler cannot auto display the value</li> </ul>"},{"location":"vehicle/parameter_estimator/#how-to-run-parameter-estimator","title":"How to Run Parameter Estimator","text":"<p>Note: You need to build the Autoware beforehand.</p> <p>The following command will start the parameter estimation node.</p> <pre><code>ros2 launch parameter_estimator parameter_estimator.launch.xml vehicle_model:=lexus\n</code></pre> <ul> <li>The following arguments are using to select the estimator, default is true<ul> <li>select_gear_ratio_estimator</li> <li>select_steer_offset_estimator</li> <li>select_wheel_base_estimator</li> </ul> </li> <li>To deselect the specific estimator, you need to set estimator to false</li> <li>Example, the following command will only launch gear ratio estimator</li> </ul> <pre><code>ros2 launch parameter_estimator parameter_estimator.launch.xml vehicle_model:=lexus select_steer_offset_estimator:=false select_wheel_base_estimator:=false\n</code></pre> <p>If you want to launch with Rviz, use the following launch file. Currently unavailable</p> <pre><code># Launch parameter Estimator with the Autoware\n$ ros2 launch parameter_estimator parameter_estimator_with_simulation.launch.xml map_path:=.../kashiwanoha2/ vehicle_model:=jpntaxi sensor_model:=aip_xx1 rviz:=true\n</code></pre>"},{"location":"vehicle/parameter_estimator/#how-to-check-the-estimated-parameters","title":"How to check the estimated parameters","text":"<p>The necessary information is plotted in the plot_juggler, which displays the following information from top to bottom.</p> <ul> <li>First row: Estimation results confirmation</li> <li>Second row: error for estimation</li> </ul> <p>You need to adjust the value of <code>(valid_min_)</code> or <code>(valid_max_)</code>. according to the standard deviation to determine the validity of the data.</p>"},{"location":"vehicle/parameter_estimator/#estimation-results-confirmation","title":"Estimation results confirmation","text":"<p>Check the estimation results.</p> <ul> <li>result : parameter estimated at each step</li> <li>result_mean : Average of the parameters</li> <li>result_stddev : Standard deviation of the estimated parameters</li> </ul> <p> </p> <p>It is preferable to use the _mean for the calibration results.</p> <p>The parameters estimation starts when enough data is stored. The output value is zero until it is ready.</p>"},{"location":"vehicle/parameter_estimator/#error-for-parameters-estimation","title":"Error for parameters estimation","text":"<p>Check the statistics of the errors in the input/output data after the parameter estimation.</p> <ul> <li>absolute_error : absolute error of measured and estimated of the parameters estimation</li> <li>mean_absolute_error : Mean of the absolute error calculated in each estimation step</li> <li>stddev_absolute_error : Standard deviation of the absolute error calculated in each estimation step</li> </ul> <p> </p> <p>If these values are large, the model needs to be reconsidered.</p>"},{"location":"vehicle/parameter_estimator/#data-preprocessing","title":"Data preprocessing","text":""},{"location":"vehicle/parameter_estimator/#examine-the-results-of-processing-the-input-data","title":"Examine the results of processing the input data","text":"<p>Data that do not satisfy the following conditions are considered invalid and will not be used for estimation.</p> <ul> <li>Data variation (evaluated by standard deviation) is smaller than the threshold</li> <li>The car is not in automatic operation mode (judged from Autoware's Engage, Vehicle's Engage, etc.)</li> </ul>"},{"location":"vehicle/pitch_checker/","title":"pitch checker","text":""},{"location":"vehicle/pitch_checker/#pitch-checker","title":"pitch checker","text":"<p>The role of this node is to visualize pitch of driving route. The source of pitch is tf (<code>map-&gt;base_link</code>).</p>"},{"location":"vehicle/pitch_checker/#how-to-visualize","title":"How to visualize","text":""},{"location":"vehicle/pitch_checker/#collect-data","title":"Collect data","text":""},{"location":"vehicle/pitch_checker/#launch-data-collector-node","title":"launch data collector node","text":"<pre><code>ros2 launch pitch_checker pitch_checker.launch.xml\n</code></pre>"},{"location":"vehicle/pitch_checker/#save-file-to-data","title":"save file to data","text":"<pre><code>ros2 service call /pitch_checker/save_flag std_srvs/srv/Trigger {}\n</code></pre> <p>(The pitch data is saved at <code>&lt;YOUR WORKSPACE&gt;/install/pitch_checker/share/pitch_checker/pitch.csv</code>)</p>"},{"location":"vehicle/pitch_checker/#visualize-data","title":"Visualize data","text":"<pre><code>ros2 launch pitch_checker view_pitch.launch.xml\n</code></pre> <p>The <code>view_pitch.launch</code> loads the data stored in the default path and visualize it is as below. The pitch angle [rad] is shown on the left plot, the value of the z-coordinate [m] on the right plot.</p> <p></p>"},{"location":"vehicle/time_delay_estimator/","title":"TimeDelayEstimation","text":""},{"location":"vehicle/time_delay_estimator/#timedelayestimation","title":"TimeDelayEstimation","text":"<p>This delay estimation node estimates a time delay from inputs to outputs for accel, brake, and steer.</p> <p> </p>"},{"location":"vehicle/time_delay_estimator/#input-response","title":"Input / Response","text":"<p>The following topics are used to estimate the delay.</p> <ul> <li><code>/vehicle/raw_vehicle_cmd</code>: used as accel/brake target value</li> <li><code>/control/control_cmd</code>: used as steer target value</li> <li><code>/calibration/vehicle/accel_status</code>: used as accel observed value</li> <li><code>/calibration/vehicle/brake_status</code>: used as brake observed value</li> <li><code>/vehicle/status/steering</code>: used as steer observed value</li> <li><code>/calibration/vehicle/is_engage</code>: used to check the driving operation status</li> </ul> <p>output.</p> <p>For users, the <code>TimeDelay.msg</code> output contains the following items:</p> <ul> <li>time_delay: Estimated time delay.</li> <li>mean: Mean value of the estimated time delay</li> <li>stddev: Standard deviation of the estimated time delay</li> <li>is_valid_data: Validity determination of the current data</li> <li>first_order_model_coefficients\uff1asize 2 array of model coefficients(b,k,t)</li> <li>second_order_model_coefficients\uff1asize 2 array of model coefficients(m,b,k,t)</li> </ul> <p>In addition, the following items are output for developers.</p> <ul> <li>Mean average error of delay estimation</li> <li>Standard deviation of the mean error of delay estimation</li> </ul> <p>These values can be confirmed in rqt_multiplot, described below.</p>"},{"location":"vehicle/time_delay_estimator/#how-to-run-time-delay-estimator","title":"How to Run Time Delay Estimator","text":"<p>Note: You need to build the Autoware beforehand.</p> <p>The following command will start the delay estimation node.</p> <pre><code>ros2 launch time_delay_estimator time_delay_estimator.launch.xml is_showing_debug_graph:=true\n</code></pre> <p> </p>"},{"location":"vehicle/time_delay_estimator/#change-the-estimator-type","title":"Change the estimator type","text":"<p>You can decide the estimator_type with the following parameters</p> <ul> <li>\"cc\" : Cross Correlation</li> <li>\"ls\" : Least Squared</li> <li>\"ls2\" : Least Squared Second</li> </ul> <p>Note: Only \"cc\" Cross Correlation will display the debug graph</p>"},{"location":"vehicle/time_delay_estimator/#how-to-check-the-estimated-delay","title":"How to check the estimated delay","text":"<p>The necessary information is plotted in the rqt_multiplot, which displays the following information from top to bottom.</p> <ul> <li>First row: Input data processing results examination</li> <li>Second row: Estimation results confirmation</li> <li>Third row: The confidence level of the estimation results</li> <li>Fourth row: Input/output error after delay compensation</li> </ul>"},{"location":"vehicle/time_delay_estimator/#input-data-processing-results-examination","title":"Input data processing results examination","text":"<p>Check the input and output data. It is also used to adjust parameters of the estimation logic.</p> <ul> <li>input raw : input data</li> <li>response raw : response data</li> <li>input processed : input data after compensation (*)</li> <li>response processed : response data after compensation (*)</li> <li>data stddev : standard deviation of the data used for estimation (used to determine validity)</li> <li>is valid data : Whether the data is valid or not<ul> <li>0.0 : invalid because the standard deviation is less than the threshold (<code>*_min_stddev_threshold</code>).</li> <li>1.0 : valid because the standard deviation is greater than the threshold (<code>*_min_stddev_threshold</code>).</li> </ul> </li> </ul> <p>(*) Smoothing, normalization, and resampling are applied as preprocessing.</p> <p> </p> <p>You need to adjust the value of <code>*_min_stddev_threshold</code> according to the standard deviation to determine the validity of the data.</p>"},{"location":"vehicle/time_delay_estimator/#estimation-results-confirmation","title":"Estimation results confirmation","text":"<p>Check the estimation results.</p> <ul> <li>delay : Time delay estimated at each step</li> <li>average : Average of the time delays</li> <li>stddev : Standard deviation of the estimated delay</li> </ul> <p> </p> <p>It is preferable to use the average for the calibration results.</p> <p>The delay estimation starts when enough data is stored. The output value is zero until it is ready.</p>"},{"location":"vehicle/time_delay_estimator/#confidence-level-of-the-estimation-results","title":"Confidence level of the estimation results","text":"<p>The reliability of the estimated time delay can be analyzed by the correlation coefficient.</p> <ul> <li>correlation peak : correlation coefficient between input and output (if this value is low (about 0.7 or less), the estimation may not be successful)</li> <li>detection result : Whether the cross-correlation resulted in a good estimation or not.<ul> <li>0.00 : Invalid estimation due to low correlation (output the previous value)</li> <li>0.50 : Estimation has not started yet or received invalid data</li> <li>1.00 : Estimation has been done properly</li> </ul> </li> </ul> <p> </p>"},{"location":"vehicle/time_delay_estimator/#inputoutput-error-after-delay-compensation","title":"Input/output error after delay compensation","text":"<p>Check the statistics of the errors in the input/output data after the time delay compensation.</p> <ul> <li>mae raw : Mean absolute error of input/output after the delay compensation</li> <li>mae mean : Mean of the mean absolute error calculated in each estimation step</li> <li>mae stddev : Standard deviation of mean absolute error</li> </ul> <p> </p> <p>If these values are large, the input/output model needs to be reconsidered.</p>"},{"location":"vehicle/time_delay_estimator/#data-preprocessing","title":"Data preprocessing","text":""},{"location":"vehicle/time_delay_estimator/#examine-the-results-of-processing-the-input-data","title":"Examine the results of processing the input data","text":"<p>Data that do not satisfy the following conditions are considered invalid and will not be used for estimation.</p> <ul> <li>Data variation (evaluated by standard deviation) is smaller than the threshold</li> <li>The car is not in automatic operation mode (judged from Autoware's Engage, Vehicle's Engage, etc.)</li> </ul>"},{"location":"vehicle/time_delay_estimator/#visualization-of-delay-estimation-results","title":"Visualization of delay estimation results","text":"<p>Before running the node, you need to set the <code>is_showing_debug_info</code> parameter in the yaml file to true for a visualization. Then the internal values of accel/brake/steer/test are plotted on the python visualization tool. If the superposition of input and response is good, we can say that we have a good estimation.</p> <p> </p>"},{"location":"vehicle/time_delay_estimator/#test-wip","title":"Test WIP","text":"<p>Execute the following command to perform an estimation on the sample data. This test should be used to see the characteristics when the parameters are changed.</p> <pre><code>roslaunch time_delay_estimator test_time_delay_estimator.launch\n</code></pre>"}]}